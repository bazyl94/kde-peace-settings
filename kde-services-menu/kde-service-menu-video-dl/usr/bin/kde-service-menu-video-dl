#!/bin/bash 
#Copyright (C) 2012 nowardev nowardev@gmail.com
 
#This file is part of kde-peace-settings.
 
#kde-peace-settings is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
version=0.3.1
function_detect_flash_path(){
 
	#create an ARRAY which has flash paths  if the script is not working just fix this and it should work again :D 	
	filesarray=($(ls -l  "/proc/$(lsof -n | awk ' /Flash/{print $2 ; exit}')/fd" | awk '/Flash/{print $9}')) 
# 	echo ${filesarray[@]}
	#create an array for firefox ...
	filesarraytwo=($(ls -l  "/proc/$(lsof -n | awk ' /plugin-co/{print $2 ; exit}')/fd" | awk '/Flash/{print $9}')) 
# 	echo ${filesarraytwo[@]}
	
if  [[ "${#filesarray[@]}" == 1 && "${#filesarraytwo[@]}" == 0  ]] ; then 
	array=("/proc/$(lsof -n | awk ' /Flash/{print $2 ; exit}')/fd/$(ls -l  "/proc/$(lsof -n | awk ' /Flash/{print $2 ; exit}')/fd" | awk '/Flash/{print $9}')") 
elif [[ "${#filesarray[@]}" == 0 && "${#filesarraytwo[@]}" == 1 ]]; then 
	array=("/proc/$(lsof -n | awk ' /plugin-co/{print $2 ; exit}')/fd/$(ls -l  "/proc/$(lsof -n | awk ' /plugin-co/{print $2 ; exit}')/fd" | awk '/Flash/{print $9}')") 
elif [[ "${#filesarray[@]}" == 0 && "${#filesarraytwo[@]}" == 0 ]]; then 
	kdialog --passivepopup $"sorry no flash found "
	exit 
elif [[ "${#filesarray[@]}" > 1  || "${#filesarraytwo[@]}" > 1 ]]; then
	a=0
	for val in ${filesarray[@]} ; do 
			array[a]="/proc/$(lsof -n | awk '/Flash/{print $2 ; exit}')/fd/$val"
# 			echo "path of flash files array  ${array[a]}"
			a=$(($a+1))
		done
	 
	for val in ${filesarraytwo[@]} ; do 
			duplicate="false"
			echo ARRAY ${#array[@]}
			for (( c=0; c<=${#array[@]}; c++ )); do 
				if [[ "${array[$c]}" == ""/proc/$(lsof -n | awk '/plugin-co/{print $2 ; exit}')/fd/$val"" && "${array[$c]}" != "" ]]; then 
					echo $val already present skipping 
					duplicate="true"
				else 
					echo $val not present
				fi 
			done
			echo DUPLICATE $duplicate
			if [[ $duplicate == false ]]; then 
				array[a]="/proc/$(lsof -n | awk '/plugin-co/{print $2 ; exit}')/fd/$val"
# 				echo "path of flash files  arrayfirefox ${array[a]}"
				a=$(($a+1))
			fi
			echo ${array[@]}
		done
else 
		kdialog --error $"This is a bug please fix it " 
fi 
 
 
}

function_help(){
	echo $"Usage : 
	version :  $version 
	kde-service-menu-video-dl   <option>
	
	Options :
	-l <video_link >	: Allow to download a video from terminal , you need to specify a link 
	-p			: play Flash video with ffplay
	-s			: saves Flash Video , files will be copied in /tmp folder 
	-y			: download the video from youtube with youtube-dl 
	-yq			: download the video from youtube with youtube-dl choosign video quality
	-mp3			: download the video from youtube and convert it on mp3
	-mp3q			: download the video from youtube and convert it on mp3 but select the video quality
	-e			: download the video from youtube and extract audio track 
	-eq			: download the video from youtube and extract audio track  selecting before video quality
	-v			: print version 
	-h			: print this help 
	
	function detect flash based on:
	
	array=(\"/proc/\$(lsof -n | awk ' /Flash/{print $2 ; exit}')/fd/\$(ls -l  \"/proc/\$(lsof -n | awk ' /Flash/{print \$2 ; exit}')/fd\" | awk '/Flash/{print \$9}')\") 
	
	for firefox :
	
	array=(\"/proc/\$(lsof -n | awk ' /plugin-co/{print $2 ; exit}')/fd/\$(ls -l  \"/proc/\$(lsof -n | awk ' /plugin-co/{print \$2 ; exit}')/fd\" | awk '/Flash/{print \$9}')\") 
 	
	"
	exit 
}

function_detect_user_folders(){
	
	if [[ -e "$HOME/.config/user-dirs.dirs" ]] ; then
	 	 desktopfolder="$(xdg-user-dir DESKTOP)"
	 	 documentsfolder="$(xdg-user-dir DOCUMENTS)"
	 	 downloadfolder="$(xdg-user-dir DOWNLOAD)"
	 	 musicfolder="$(xdg-user-dir MUSIC)"
	 	 picturesfolder="$(xdg-user-dir PICTURES)"
	 	 pubblicsharefolder="$(xdg-user-dir PUBBLICSHARE)"
	 	 templatesfolder="$(xdg-user-dir TEMPLATES)"
	 	 videosfolder="$(xdg-user-dir VIDEOS)"
	else
	 
	 	 echo $"sorry no file  ~/.config/user-dirs.dirs , please install xdg stuff "
	 	 desktopfolder="$HOME"
	 	 documentsfolder="$HOME"
	 	 downloadfolder="$HOME"
	 	 musicfolder="$HOME"
	 	 picturesfolder="$HOME"
	 	 pubblicsharefolder="$HOME"
	 	 templatesfolder="$HOME"
	 	 videosfolder="$HOME"
	 fi  
}

function_detect_video_players() {
players=(ffplay mplayer vlc smplayer kaffeine  xine xbmc)
videoplayerarr=()
a=0
for player in ${players[@]} ; do 
if [[ ! -z "$(type "$player" )"  ]] ; then
	videoplayerarr[$a]="$player"
	a=$(($a+1))
fi 
done

}
 
 
function_play_flash (){
	
	videoplayer="$(kdialog --title $"Video Player"  --combobox  $"Choose your player  " ${videoplayerarr[@]}  --default  ${players[2]} )"	
	testvariable="$videoplayer"
	
	if [[  -z  "$testvariable"    ]] ; then
		echo "video player  is empty ... exiting function play flash "
# 		videoplayer="ffplay"
		exit
	else
		echo "video player $testvariable"
	fi 
	

if  [[ "${#array[@]}" == 1  ]] ; then 
	$videoplayer  "${array[0]}" 
elif [[ "${#array[@]}" == 0  ]]; then 
	kdialog --passivepopup $"sorry no flash found " 
elif [[ "${#array[@]}" > 1  ]]; then
	ans="$(kdialog --combobox $"Choose  the path for your flash video " "${array[@]}")" 
	
	if [[ ! -z "$ans" ]]; then 
	
		if [[ $videoplayer == "vlc" ]]; then 
			vlc --control dbus ${array[*]}
			 
		else 
			$videoplayer  "$ans"
		fi 
	else
		echo $"170 No answer... exiting"
	fi 
else 
		kdialog --error $"This is a bug please fix it " 
fi 

}
function_save_flash_with_title(){

#get the dbus number 
	konquerordbus=$(qdbus | grep konqueror)
	testvariable="$konquerordbus"
	
	if [[  -z  "$testvariable"    ]] ; then
		echo "$testvariable is empty"
		kdialog --passivepopup "exiting ... no konqueror aviable :P "
		exit 2
	else
		echo "$testvariable"
	fi 

#get the active window 
	for i in $konquerordbus; do
		
    if [[ $(qdbus $i /konqueror/MainWindow_1 org.qtproject.Qt.QWidget.isActiveWindow) = "true" ]]; then
	#get the title 
	youtubetitle="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle)"
	#blank about:blank
	#get the title without -youtube weird word 
	title="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle |awk '{gsub(/- YouTube/,""); gsub(/ /,"_"); print }'|awk '{gsub(/[^a-z|0-9|_ ]/,""); print }')"
	url="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL)"
	cleanurl="$(qdbus $i /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL  | awk -F '&' '{print $1}')"
	echo   $"Downloading .. $url clearurl  $cleanurl"  
	
	break;
    fi
done


if  [[ "${#array[@]}" == 1  ]] ; then 
	kdialog --title $"Service Menu Kde-video-dl"  --passivepopup $"Detected flash ... cp "${array[0]}"  /tmp/$title.flv" 2
	a="/tmp/$title.flv"  
	if [[  -e "$a"  ]] ; then
		if kdialog --title $"Service Menu Kde-video-dl"  --warningyesno  $" File $a already exists do you want overwrite ? "; then 

			
			 echo "cp "${array[0]}"  /tmp/$title.flv"
			cp "${array[0]}"  "/tmp/$title.flv"
			kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  files are in /tmp folder " 2
			qdbus $(qdbus | grep -m1 konqueror) /konqueror/MainWindow_1 org.kde.Konqueror.MainWindow.newTab '/tmp' False

		else 
			echo "exiting .."
			exit
		fi 
 
		else
			echo "copying file cp "${array[0]}"  /tmp/$title.flv"
			cp "${array[0]}"  "/tmp/$title.flv"
			kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  flash video copied here /tmp/$title.flv " 2
			fi 
			

elif [[ "${#array[@]}" == 0  ]]; then 
	kdialog --passivepopup $"sorry no flash found, this could be a bug on the function to detect flash video path  " 
elif [[ "${#array[@]}" > 1  ]]; then
kdialog --title $"Service Menu Kde-video-dl"  --passivepopup $"Detected Multiple flash ... cp "${array[0]}"  /tmp/$title.flv" 2
	a=1 
	for file in ${array[@]}  ; do 
		echo "cp "$file" /tmp/$title.flv_$a.flv" 
		cp "$file" "/tmp/$title_$a.flv"
		a=$(($a+1))
		echo "copied!"
		done
		kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  files are in /tmp folder " 2
else 
		kdialog --error $"This is a bug please fix it " 
fi 
}

function_save_flash(){



if  [[ "${#array[@]}" == 1  ]] ; then 
	kdialog --title $"Service Menu Kde-video-dl"  --passivepopup $"Detected flash ... cp "${array[0]}"  /tmp/Flash.flv" 2
	a="/tmp/Flash.flv"  
	if [[  -e "$a"  ]] ; then
		if kdialog --title $"Service Menu Kde-video-dl"  --warningyesno  $" File $a already exists do you want overwrite ? "; then 

			
			 echo "cp "${array[0]}"  /tmp/Flash.flv"
			cp "${array[0]}"  /tmp/Flash.flv
			kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  files are in /tmp folder " 2
		else 
			echo "exiting .."
			exit
		fi 
 
		else
			echo "copying file cp "${array[0]}"  /tmp/Flash.flv"
			cp "${array[0]}"  /tmp/Flash.flv
			kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  flash video copied here /tmp/Flash.flv " 2
			fi 
			

elif [[ "${#array[@]}" == 0  ]]; then 
	kdialog --passivepopup $"sorry no flash found, this could be a bug on the function to detect flash video path  " 
elif [[ "${#array[@]}" > 1  ]]; then
kdialog --title $"Service Menu Kde-video-dl"  --passivepopup $"Detected Multiple flash ... cp "${array[0]}"  /tmp/Flash.flv" 2
	a=1 
	for file in ${array[@]}  ; do 
		echo "cp "$file" /tmp/Flash_$a.flv" 
		cp "$file" /tmp/Flash_$a.flv
		a=$(($a+1))
		echo "copied!"
		done
		kdialog --title $"Service Menu Kde-video-dl"  --passivepopup  $" Job done  files are in /tmp folder " 2
else 
		kdialog --error $"This is a bug please fix it " 
fi 
}

function_detect_flash_quality() {
 
#detect which formats you can dowload create a menu to choose what user prefer  
 qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Retrieving Quality options for $title...wait"
 code=() ; format=() ; desc=() 
 
 while IFS="         " read -r c f d; do code+=("$c"); format+=("$f"); desc+=("$d"); done<<<"$(youtube-dl -F  $cleanurl | grep -A 20 DASH )"
 
 
ARGS="--menu \"Choose your profile\" --"
for ((i=0; i<${#desc[@]}; i++)); do
ARGS="$ARGS \"${code[$i]}\" \"${format[$i]}  ${desc[$i]} \""
done
 
SELECTED_OPTIONS=$(echo $ARGS | xargs kdialog)
echo "user has choosen  $SELECTED_OPTIONS"
if [[ -z "$SELECTED_OPTIONS" ]] ; then 
detectedquality=""
else

detectedquality="-f $SELECTED_OPTIONS"
fi 
	echo  "doing ... cd "$outfolder" ; youtube-dl $detectedquality -t  $cleanurl " >/tmp/kde-service-menu-youtube-dl.log

}

function_detect_best_quality() {
 
	#detect which formats you can dowload create a menu to choose what user prefer  
	qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Retrieving Best Quality Code for $title...wait"
	code="" ; format="" ; desc="" 
 
	while IFS="         " read -r c f d; do code="$c"; format="$f"; desc="$d"; done<<<"$(youtube-dl -F  $cleanurl | grep best )"

	if [[ -z "$code" ]] ; then 
		detectedquality=""
	else
		detectedquality="-f $code"
	fi 
	
	echo  "doing ... cd "$outfolder" ; youtube-dl $detectedquality -t  $cleanurl " >/tmp/kde-service-menu-youtube-dl.log
	
#  kdialog --title $"My App Title"  --passivepopup  $"$detectedquality" 3
  
}



function_download_flash_youtube_start(){
	
		program[1]=youtube-dl
		program[2]=mawk
		program[3]=ffmpeg
		program[4]=ffprobe

	
	for program in "${program[@]}";do 
		
		if [[ -z $(type -p "$program") ]];then 
	 
				kdialog --error $"$program not found; PLEASE INSTALL IT" >&2
				echo "error exiting..." >&2
				exit 1;
 
		fi
	done
	
	#get the dbus number 
	konquerordbus=$(qdbus | grep konqueror)
	testvariable="$konquerordbus"
	
	if [[  -z  "$testvariable"    ]] ; then
		echo "$testvariable is empty"
		kdialog --passivepopup "exiting ... no konqueror aviable :P "
		exit 2
	else
		echo "$testvariable"
	fi 
	
	
	
	#get the active window 
	for i in $konquerordbus; do
		
    if [[ $(qdbus $i /konqueror/MainWindow_1 org.qtproject.Qt.QWidget.isActiveWindow) = "true" ]]; then
	#get the title 
	youtubetitle="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle)"
	#blank about:blank
	#get the title without -youtube weird word 
	title="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle |awk '{gsub(/- YouTube/,""); print }')"
	url="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL)"
	cleanurl="$(qdbus $i /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL  | awk -F '&' '{print $1}')"
	echo   $"Downloading .. $url clearurl  $cleanurl"  
	
	break;
    fi
done


	testvariable="$cleanurl"

	if [[  -z  "$testvariable"    ]] ; then
		echo "$testvariable is empty"
		kdialog --title $"Kde Service Menu Video-dl"  --passivepopup  $"Sorry the script was not able to get url from konqueror so... or it's a bug or you are doing weird stuff :P" 3
		exit 
	
	else
			echo "detected url ... $testvariable"
			
 
			outfolder="$(kdialog --title $"Konqueror Download Service Menu"  --getexistingdirectory "$videosfolder" )"
			 
  
			testvariable="$outfolder"
			if [[  -z  "$testvariable"    ]] ; then
				echo "$testvariable is empty"
				outfolder="/tmp"
			else
					echo "outfolder .... $testvariable"
			fi 

			progressbar=$(kdialog --progressbar "Downloading ... $title" 100) 
			qdbus $progressbar showCancelButton true
		
	fi 
 
}



function_video(){

qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading $title...wait <br> Format Quality $format $desc "
 
qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  0
 

# set -x 
testfile=""$outfolder"/"$(youtube-dl --get-filename $detectedquality -t   "$cleanurl")""
if [[ -e "$testfile" ]]; then 
kdialog --passivepopup $"File already downloaded in $outfolder ...exiting "
qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
echo $"file already exist please remove it before $testfile"
exit
 
fi 
 
while read  line &&  [[ "false" == "$(qdbus  $progressbar wasCancelled)" ]] ; do 
 
		
		if [[ "$line" -ge 0 && "$line" -le 100 ]]; then #remove the problem with youtubedl => the first values are high numbers or video's id 
		qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line
# 		qdbus $progressbar   showCancelButton true 
		
		else
		#detected wrong value setting to 0
		qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  0
		 
		
		fi 

done< <(cd "$outfolder";   youtube-dl $detectedquality -t   "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')

if [[ "$(qdbus $progressbar Get "" "value")" == "100" ]] ;then 
	qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
	kdialog --passivepopup $"$cleanurl downloaded"
fi 
 
qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
#  set +x 
kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
 
}


function_mp3(){

testfile=""$outfolder"/"$(youtube-dl --get-filename $detectedquality -t   "$cleanurl")""
testfile="${testfile%%.*}.mp3"
  
 
if [[ -e "$testfile" ]]; then 
kdialog --passivepopup $"File already downloaded in $outfolder ...exiting "
qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
echo $"file already exist please remove it before $testfile"
exit
 
fi 

	qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading $title...wait <br> Format Quality $format $desc "
	while read  line  &&  [[ "false" == "$(qdbus  $progressbar wasCancelled)" ]]; do 
				
			if [[ "$line" -ge 0 && "$line" -le 100 ]]; then #remove the problem with youtubedl => the first values are high numbers or video's id 
			qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line
# 			qdbus $progressbar   showCancelButton true 
		
			else
			#detected wrong value setting to 0
			qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  0
		 
		
			fi 
			if [[ "$(qdbus $progressbar Get "" "value")" == "100" ]] ;then 
				qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
				kdialog --passivepopup $"$cleanurl downloaded"
			fi 
				
	done < <(cd "$outfolder";youtube-dl $detectedquality  -t --extract-audio --audio-format=mp3  "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
	qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
	kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
}


function_extract(){

#check if file exist 


	qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading $title...wait <br> Format Quality $format $desc "
	while read  line &&  [[ "false" == "$(qdbus  $progressbar wasCancelled)" ]] ; do 
				
			if [[ "$line" -ge 0 && "$line" -le 100 ]]; then #remove the problem with youtubedl => the first 		values are high numbers or video's id 
				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line
# 				qdbus $progressbar   showCancelButton true 
		
			else
			#detected wrong value setting to 0
				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  0
		 
		
			fi 
			if [[ "$(qdbus $progressbar Get "" "value")" == "100" ]] ;then 
				qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit 
				kdialog --passivepopup $"$cleanurl downloaded"
			fi 
				
	done < <(cd "$outfolder";youtube-dl $detectedquality -t --extract-audio "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
	qdbus  ${progressbar/\/ProgressDialog/} /MainApplication org.kde.KApplication.quit
	kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
}


# function_video_old(){
# 
# 	qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading $title...wait <br> Format Quality $format $desc "
# 	while read  line &&  [[ "false" == "$(qdbus  $progressbar wasCancelled)" ]]; do 
# 				
# 				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line 
# 				
# 			done < <(cd "$outfolder";youtube-dl $detectedquality -t   "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
# 			
# 	kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
# 		 
# 	
# }
# 
# function_video_quality_detected(){
# 	
# 	while read  line ; do 
# 				qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading  $title...wait"
# 				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line 
# 				
# 			done < <(cd "$outfolder";youtube-dl $detectedquality -t   "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
# 			
# 			kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
# 	
# }
# function_mp3_quality(){
# 	while read  line ; do 
# 				qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading  $title...wait"
# 				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line 
# 				
# 			done < <(cd "$outfolder";youtube-dl $detectedquality -t --extract-audio --audio-format=mp3  "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
# 			
# 			kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
# }
# function_extract_quality(){
# 	while read  line ; do 
# 				qdbus $progressbar  org.kde.kdialog.ProgressDialog.setLabelText $"Downloading  $title...wait"
# 				qdbus  $progressbar Set org.kde.kdialog.ProgressDialog value  $line 
# 				
# 			done < <(cd "$outfolder";youtube-dl $detectedquality -t --extract-audio "$cleanurl" |stdbuf -o0 tr '\r' '\n'   |mawk  -W interactive  '{ print int($2+0) }')
# 			
# 			kdialog --title $"Konqueror Download Service Menu"  --passivepopup  $" All jobs done Videos are in $outfolder" 3
# }

#  
#  function_test(){
#  set -x
#  
#  	#get the dbus number 
# 	konquerordbus=$(qdbus | grep konqueror)
# 	testvariable="$konquerordbus"
# 	
# 	if [[  -z  "$testvariable"    ]] ; then
# 		echo "$testvariable is empty"
# 		kdialog --passivepopup "exiting ... no konqueror aviable :P "
# 		exit 2
# 	else
# 		echo "$testvariable"
# 	fi 
# #get the active window 
# 	for i in $konquerordbus; do
# 		
#     if [[ $(qdbus $i /konqueror/MainWindow_1 org.qtproject.Qt.QWidget.isActiveWindow) = "true" ]]; then
# 	#get the title 
# 	youtubetitle="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle)"
# 	#blank about:blank
# 	#get the title without -youtube weird word 
# 	title="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentTitle |awk '{gsub(/- YouTube/,""); print }')"
# 	url="$(qdbus $i  /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL)"
# 	cleanurl="$(qdbus $i /konqueror/MainWindow_1 org.kde.konqueror.KonqMainWindow.currentURL  | awk -F '&' '{print $1}')"
# 	echo   $"Downloading .. $url clearurl  $cleanurl"  
# 	
# 	break;
#     fi
# done
# echo $youtubetitle $title $url  $cleanurl
# }
#  


if  [[ $1 == -*  ]]; then
function_detect_user_folders
function_detect_video_players

	case "$1" in
	-h|--help|-\?) function_help; exit 0;;
	-l)
	
	cleanurl="$2"
	function_detect_user_folders
	outfolder="$videosfolder"
	title="$(youtube-dl --get-filename "$2")"
	title="${title%%.*}"
	progressbar="$(kdialog --progressbar "Downloading ... $title" 100)"
	qdbus $progressbar showCancelButton true
	function_detect_best_quality
	function_video
	;; 
	-p)
	#execute the function to play  get the array with flash paths 
	function_detect_flash_path
	#run function play flash 
	function_play_flash 
	;;
	-y)

	function_download_flash_youtube_start
	function_detect_best_quality
	function_video
	;;
	-yq)
	function_download_flash_youtube_start
	function_detect_flash_quality
	function_video
	;;
	-e)
	function_download_flash_youtube_start
	function_detect_best_quality
	function_extract
	;;
	-eq)
	function_download_flash_youtube_start
	function_detect_flash_quality
	function_extract
	;;
	-mp3)
	
	function_download_flash_youtube_start
	function_detect_best_quality
	function_mp3
	;;
	-mp3q)
	function_download_flash_youtube_start
	function_detect_flash_quality
	function_mp3
	;;
	#save function 
	-s)function_detect_flash_path
	 function_save_flash
	 ;;
	 #save with title 
	 -st)
	 function_detect_flash_path
	 function_save_flash_with_title
	 ;;
# 	 -ttt)
# 	 function_test
# 	 cleanurl="http://www.youtube.com/watch?v= "
# 	 function_detect_best_quality
# 	 ;;
 
	-v) 
	echo "

kde-service-menu-video-dl  $version 
	
for bugs mail me to nowardev@gmail.com
	
	"
 
	exit 
	;;
	--) shift; echo "invalid option: $1" 1>&2; function_help; exit 1;;
	-*) echo "invalid option: $1" 1>&2; function_help; exit 1;;
	esac
else
	function_help; exit 1
fi