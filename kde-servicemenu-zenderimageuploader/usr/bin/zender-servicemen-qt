#!/bin/bash
Version="0.0.1"
#Copyright (C) 2012 nowardev nowardev@gmail.com

#This file is part of kde-peace-settings.

#kde-peace-settings is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program. If not, see <http://www.gnu.org/licenses/>.
#


function_help (){
	
	message=$"$scriptname is released with license $lincense 
	
USAGE  :
	
$scriptname -h print this help                 No X server
$scriptname -hx print this help                With X server
$scriptname -f <file1> <file2> ..              Add files to upload list
$scriptname -fo <folder1> <folder2>...         Add Folders to upload list
$scriptname -fox <folder1> <folder2>...        Add Folders to upload list  
$scriptname -e                                 Edit upload list with nano
$scriptname -ek                                Edit upload list with kate  
$scriptname -d                                 DELETE convesion list
$scriptname -r                                 RESTORE you old upload list
$scriptname -mx                                start the kdialog menu  
$scriptname -wx                                start the script for servers
	
	"
}

function_create_servicemenufolder () {
	if [[ "$kdehome" == "$HOME/.local/" ]] ; then
		
				if [[ ! -d "$HOME/.local/share/apps" ]]; then 
				mkdir "$HOME/.local/share/apps"
				mkdir "$servicemenufolder"
				fi
		
	else 
				if [[ ! -d "$servicemenufolder" ]]; then 
				mkdir "$servicemenufolder"
				fi
	fi 
	
}

function_save_login_and_password () {
	function_yesno $"Do you want set server login and passwords ?"
	if [[ "$ans" == "yes" ]]; then 
	
	fi 
	
}
function_create_settings () {

	commonfomats="jpeg jpg png bmp gif tiff tif "
	
	if [[ -z "$pidofx" ]]; then 
			read -p $"You can search for photos in a folder i will detect this formats $commonformats if you want only jpeg files you should set only jpeg because the loop will be faster ...PRESS ENTER IF YOU DON'T WANT BE BORED FROM THIS QUESTION"
				if [[ -z "$REPLY" ]];then
					commonfomats="jpeg jpg png bmp gif tiff tif "
				else 
					commonfomats="$REPLY"
				fi
			REPLY=""
			read -p $"Choose your prefered server you can pick one of these : ${servers[@]}"
				if [[ -z "$REPLY" ]];then
					preferedserver="$defaultserver"
				else 
					commonfomats="$REPLY"
				fi
			REPLY=""
	
	else 
		
		commonformats="$(kdialog --title $"Kind of files you want detect " --checklist  $"Select the formats Image Uploader service menu should detected when you would like add a folder"bmp bmp on gif gif on jpeg jpeg on jpg jpg on pgm pgm off  png png on pnm pnm off svg svg off  tif tif on tiff tiff on)"
		
		preferedserver="$(kdialog --title $"$title"  $"Choose your prefered server you can pick one of these:" "${servers[@]}")"
	
	fi 
	function_save_login_and_password
	function_load_settings
}

function_load_settings () {
	
}

function_encrypt_password () {
	openssl des3 -salt -in "$passwordfile" -out "$encryptedfile"
	rm "$passwordfile" 
}

function_decrypt_password () {
	  
	openssl des3 -d -salt -in "$encryptedfile" -out "$decryptedfile"
}

function_add_login_and_password () {
	function_decrypt_password
		if [[ -e "$passwordfile" ]];then 
		rm "$passwordfile"
		fi 
	mv "$decryptedfile"  "$passwordfile"
	function_ask_stuff_combo $"Choose a Server" $listservers
	function_ask_stuff $"Insert the Login if the server doesn't need it leave it empty"
	function_ask_stuff $"Insert the Password if the server doesn't need it leave it empty"
	echo "$newserver/$newlogin/$newpassword" >>"$passwordfile"
	function_encrypt_password
	function_delete_password_and_temp_file
	
}

function_ask_stuff () {
	
	if [[ -z "$pidofx" ]]; then
	read  -p  "$1"

	else
		kdialog --title "$scriptname" --textinputbox "$1" 
		
	fi 
}
function_ask_stuff_combo () {
	
	if [[ -z "$pidofx" ]]; then
	read  -p  "$1 aviable servers $2"

	else
		kdialog --title "$scriptname" --combobox "$1" $2
		
	fi 
}

function_delete_password_and_temp_file () {
	if [[ -e "$passwordfile" ]];then 
		rm "$passwordfile"
	fi 
	
	if [[ -e "$decryptedfile" ]];then 
		rm "$decryptedfile"
	fi 
	

	
}
function_check_program(){
	
	if [[ -z "$pidofx" ]] ; then

	program[0]=openssl
	program[1]=imgupload
	program[2]=awk
	for program in "${program[@]}";
	do if ! type -p "$program" >/dev/null;
	then echo "$program not found; PLEASE INSTALL IT" >&2
	echo "error exiting..." >&2
	exit 1;
	fi; done

	else

	program[0]=openssl
	program[1]=imgupload
	program[2]=kdialog
	program[3]=awk
	for program in "${program[@]}";
	do if ! type -p "$program" >/dev/null;
	then kdialog --msgbox $"$program not found; PLEASE INSTALL IT" >&2
	echo "error exiting..." >&2
	exit 1;
	fi; done
	
fi
	
}



function_set_antix (){

pidofx=""
}

function_open_text_file () {

if [[ -z "$pidofx" ]]; then
nano "$1"
else
kde-open "$1"

fi
}

function_info_message () {

if [[ -z "$pidofx" ]]; then
echo "$1"
else
kdialog --title $"IMGuploader Dolphin Service Menu" --msgbox "$1"

fi



}


function_yesno (){
	
	if [[ -z "$pidofx" ]]; then
		read -p "$1" ans
		
# 		case "$REPLY" in
# 		"$2")
# 		;;
# 		*)
# 		ans="$3"
# 		esac 
	else 
		ans=$(kdialog --title "$title" --yesno "$1")
	fi
}

function_message(){
if [[ -z "$pidofx" ]] ; then

echo "$1"

else

kdialog --msgbox "$1"
fi


}


function_message_error(){

if [[ -z "$pidofx" ]] ; then

echo "ERROR! $1"

else

kdialog --error "$1"
fi


}

function_add_folder () {

while read line ;do
for extension in $commonformats ; do

if [[ "$line" == *.$extension ]] ; then
echo $"adding $line"
echo "$line" >>"$listoffile"
fi
done

done< <(find "$1" -type f)

}

function_create_progressbar () {
	mystufvariabletouseonmyscript=$(kdialog --title "$title"  --progressbar $"Starting uploading..." 100)

	qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true

	qdbus $mystufvariabletouseonmyscript  showCancelButton true
}

function_get_servers_list () {
if [[ "$detectservers" == "true" ]]; then 
a=1;while read z ; do servers[$a]="$z";a=$(($a+1));done< <(imgupload --list 2>&1| awk ' !/Zenden Image Uploader console/{printf("%s  \n" , $0)}')

else 
scriptservers="$listofserversinternal"
fi 



}



function_loop_nologin() {
	while read line
		do
			imgupload --server "$server" "$line"
		done<"$listoffile"
	
	
}


function_loop_login() {
	echo >"$linkfile"
	while read line
		do
			imgupload --server "$server" --login "$login" --password "$password" "$line" >>
		done<"$listoffile"
	
	
}

function_delete (){
if [[ -e "$listoffile"    ]] ; then #&& -e "$templog"


function_passivepopup "mv "$listoffile"  $HOME/.local/share/Trash/files/
mv "$templog"  "$HOME"/.local/share/Trash/files/ "
mv "$listoffile"  $HOME/.local/share/Trash/files/
#mv "$templog"  "$HOME"/.local/share/Trash/files/
# function_passivepopup_test $"Old list  $listoffile deleted and Old log $templog deleted"
# 
# elif [[ ! -e "$listoffile" ]] ; then
# function_passivepopup_test $"i can't do it i can't find the file $listoffile"
# elif [[ ! -e "$templog" ]] ; then
# function_passivepopup_test $"i can't do it i can't find the file $templog"
else
function_passivepopup_test $"i can't do it i can't find the file  $listoffile   

Please add some files to $listoffile? 

run this :

$scriptname -f file1 file2 file3

or if you prefer add a folder 

$scriptname -fo folder1 folder2 folder3
"
fi



if [[ -z $1 ]] ; then 
    function_menu_start
elif [[ "$1" == "silent" ]] ; then
echo 
fi 
 
}

function_search_kdehome (){
	if [[ -d "$HOME/.kde" ]]; then 
		kdehome="$HOME/.kde/"
	elif [[ -d "$HOME/.kde4" ]]; then 
		kdehome="$HOME/.kde4/"
	else
		kdehome="$HOME/.local/"
	fi
}


########START SCRIPT##############################
function_search_kdehome
lincense="GPLv3"
scriptname="imgupload-peace-servicemenu"
pidofx="$(pidof X)"
defaultserver="rapidshare.com"
detectservers="true" #you can set it false and ti will load like servers listofserversinternal
listofserversinternal=(10pix.ru "FTP Server" ImageBan.ru Imageshack.us ImgFiles.Ru Immage.de "Picasa WebAlbums" Yandex.Fotki Yandex.Narod bayimg.com directupload.net epikz.net fastpic.ru funkyimg.com habreffect.ru iPicture.ru iceimg.com image2you.ru imagevenue.com imgur.com keep4u.ru multi-up.com p2p.dm photoload.ru pikucha.ru pinpic.ru pix.am radikal.ru rapidshare.com rghost.ru sendspace.com share.te.ua twitpic.com uploadbox.com vfl.ru youpic.su zalil.ru)
numberoffile=$(wc -l <"$listoffile")
listoffile="$HOME/.$scriptname-list.lst"
servicemenufolder="$kdehome/share/apps/$scriptname-qt"
linkfile="$kdehome/share/apps/$scriptname/links.lst"
encryptedfile="$kdehome/$scriptname-encrypt"
decryptedfile="$kdehome/$scriptname-tempfile"
passwordfile="$kdehome/$scriptname-tempfile-p"

if  [[ $1 == -*  ]]; then
	case "$1" in
	-h|--help|-\?) function_help; exit 0;;
	-hx) function_help x; exit 0;;
	  
	-f) if (($# > 1)); then
			shift ;for file in "$@"; do
		echo "$file" >>$listoffile

		done
		  else
			echo $"-f requires files" 1>&2
			exit 1
		  fi ;;
		  
	-fo) if (($# > 1)); then
			shift ;for folder in "$@"; do
		function_add_folder_shell "$folder"  
		done
		  else
			echo $"-f requires a folder at least" 1>&2
			exit 1
		  fi ;;
		 -fox)if (($# > 1)); then
			shift ;for folder in "$@"; do
		function_add_folder "$folder"  
		done
		  else
			kdialog --error $"-f requires a folder at least" 1>&2
			exit 1
		  fi
		 ;;
 
	-e)  nano "$listoffile"
	;;
	-ek)  kate "$listoffile"
	;;
 
 
	-wx)
	function_set_antix
	function_menu_start
	;;
	-mx)
	function_menu_start
	;;
	-r) 
	function_restore
	;;
 
	--) shift; echo "invalid option: $1" 1>&2; function_help; exit 1;;
	-*) echo "invalid option: $1" 1>&2; function_help; exit 1;;
	esac
else

function_help; exit 1
fi

 