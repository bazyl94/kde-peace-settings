#!/bin/bash -x

#
#Copyright (C) 2012 nowardev nowardev@gmail.com
 
#This file is part of kde-peace-settings.
 
#kde-peace-settings is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
Version="0.0.1"
Author="nowardev@gmail.com"
license="GLPv3"
title=$"FFmpeg Dolphin Service Menu"
threads=`cat /proc/cpuinfo | grep processor | wc -l` 
listoffile="$HOME/ffmpeg-service-menu-qt.lst"
numberoffile=$(wc -l <$listoffile)

passivepopup="enabled"
overwrite="-y"
#DONE

function_load_profiles(){

while read line; do 
i=1
nameprofile[$i]=$(awk '{print $1}')
ffmpegoptionprofile[$i]=$(awk '{print $2}')

  kdialog --menu "choose your profile" $(for ((i = 0; i <=${#a[@]} ; i++ )) ; do printf "%s %s " "${nameprofile[i]}" "${ffmpegoptionprofile[i]}"; done)
done < "$HOME/.FFmpeg_profiles-qt.lst"
}


function_check(){

if [[ ! -e "$listoffile" ]] ; then
kdialog --error $"i can't find the conversion list $HOME/ffmpeg-service-menu-qt.lst"
ansmainmenu=""
function_menu_start

elif [[ ! -s "$listoffile" ]]; then 
kdialog --error $"Check your list is empty! add some file to your list file ~/ffmpeg-service-menu-qt.lst"
ansmainmenu=""
function_menu_start
fi

}

function_check_for_errors(){
errors=$(awk '/Unable/{print }' /tmp/ffmpeg-peace.log)
askopen=0

if [[ "$errors" =~ "ffmpeg-peace.log' for reading (No such file or directory)" ]] ; then 
	kdialog --error $"Unable ot open /tmp/ffmpeg-peace.log this is bad! "
	askopen=1
elif [[ "$errors" =~ "Unable to find a suitable output format for" ]]; then 
kdialog --error $"Unable to find a suitable output format for ..wrong outformat?"
askopen=1
else
askopen=0
fi

if [[ "$askopen" == 1 ]]; then 

	ans=$(kdialog --yesno $"Do you want open the log.. I have found some error on the log?")
		if [[ $? == 0 ]] ; then
			kate /tmp/ffmpeg-peace.log
		else 
			function_menu_start
		fi

fi
}

function_ffmpeg_easy (){
 
function_check

a=1
mystufvariabletouseonmyscript=$(kdialog --progressbar $"Starting Conversion..." 100)
qdbus $mystufvariabletouseonmyscript  showCancelButton true 

until test "true" = `qdbus  $mystufvariabletouseonmyscript wasCancelled` ; do 
	outformat=$(kdialog --combobox $"Convert to..keeping the same quality" mp3 mp2 aac ape mp4 mov avi mpg mpeg webm wmv theora flv asf sticaz --default webm)
	while read line ; do
		qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line" 

		ffmpeg -i  "$line"  -sameq "$overwrite" "${line%%.*}.$outformat"  2>/tmp/ffmpeg-peace.log



		value=$(( $(($a*100))/$numberoffile ))
		qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
		a=$(($a+1))
		done< "$listoffile"
	if [[ "$value" == 100 ]];then 
	
		if [[ "$passivepopup" == "enabled" ]];then
			kdialog --passivepopup $"Conversions done!"
		fi

	function_check_for_errors
		exit
	fi
done



}

 
 
 function_menu_start(){
 
ans=$(kdialog --title $"Main Menu FFmpeg Dolphin Service Menu" --menu  $"Choose an option" e $"Easy" a $"Advanced" p $"Load Profile" add $"Add files" addf $"Add Folders"  v "Version Author Copyright" ex $"Exit")
 

 
 }
 

 
 


if [[ -z "$1" ]] ; then
function_menu_start
elif [[ "$1" == "start" ]]; then 
function_menu_start

fi


case "$ans" in 
 
e)
function_ffmpeg_easy
;;
 
 a)
kdialog --msgbox $"Sorry it will take time for this..."
function_menu_start
 ;;
 
add)
kdialog --msgbox $"Sorry it will take time for this..."
function_menu_start
 ;;
 
addf)
kdialog --msgbox $"Sorry it will take time for this..."
function_menu_start
 ;;
 v)
kdialog --title "$title" --msgbox "$Version $Author $License"
 ;;
 ex)
 exit
 ;;
 esac
 
