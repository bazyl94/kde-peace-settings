#!/bin/bash
Version="0.2.4"
#Copyright (C) 2012 nowardev nowardev@gmail.com
 
#This file is part of kde-peace-settings.
 
#kde-peace-settings is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

 
function_set_antix (){

pidofx=""
}

function_open_text_file () {

if [[ -z "$pidofx" ]]; then 
"$texteditor "$1""
else 
"$xtexteditor "$1""

fi 
}

function_info_message () {

if [[ -z "$pidofx" ]]; then 
echo "$1"
else 
kdialog --title $"FFprobe Dolphin Service Menu" --msgbox  "$1"

fi 



}

function_ask_exit () {
	if [[ -z "$pidofx" ]]; then 
		echo $"You have not choose a valid option do you want exit? press ENTER to exit"
		echo 
		read 
		
		if [[ -z "$REPLY" ]];then
			exit 0
		else
			function_menu_start
			
		fi
	REPLY=""
	else 
		kdialog --title "$title" --yesno $"You have not choose an option do you want exit?"
		if [[ $? == 1 ]] ; then
			function_menu_start
		else
			exit
		fi

	fi
	
}

function_load_settings (){



if  [[ ! -e  "$ffmpeg_service_menu_settings" ]] ; then
function_create_settings
fi
xtexteditor="$(awk -F':' '/xtexteditor:/{print $2}' "$ffmpeg_service_menu_settings")"
texteditor="$(awk -F':' '/texteditor:/{print $2}' "$ffmpeg_service_menu_settings")"
overwrite="$(awk -F':' '/overwrite:/{gsub(/ /,""); print $2}' "$ffmpeg_service_menu_settings")"
threads="$(awk  -F':' '/cpu:/{print $2}' "$ffmpeg_service_menu_settings")"
easyprofile="$(awk  -F':' '/easyprofile:/{print $2}' "$ffmpeg_service_menu_settings")"
ffmpegpath="$(awk  -F':' '/ffmpegpath or avconvpath:/{print $2}' "$ffmpeg_service_menu_settings")"
probe="$(awk  -F':' '/ffprobe or avprobe:/{print $2}' "$ffmpeg_service_menu_settings")"
commonaudioformats="$(awk  -F':' '/common audio formats:/{print $2}' "$ffmpeg_service_menu_settings")"
commonvideoformats="$(awk  -F':' '/common video formats:/{print $2}' "$ffmpeg_service_menu_settings")"
filtercommonaudioformats="$(awk '{ for(i=1; i<=NF; i++) {printf( "\*\.%s ", $i )}}' << _EOF
$commonaudioformats
_EOF
)"

filtercommonvideoformats="$(awk '{ for(i=1; i<=NF; i++) {printf( "\*\.%s ", $i )}}' << _EOF
$commonvideoformats
_EOF
)"
# commonvideoformats='ogv mkv mp4'; read -ra exts <<< "$commonvideoformats"; echo "${exts[*]/#/*.}"


defaultformat="$(awk  -F':' '/prefered default format:/{gsub(/ /,"");print $2}' "$ffmpeg_service_menu_settings")"
passivepopup="$(awk  -F':' '/passive popup:/{gsub(/ /,"");print $2}' "$ffmpeg_service_menu_settings")"
numberofpass="$(awk  -F':' '/number of pass:/{gsub(/ /,"");print $2}' "$ffmpeg_service_menu_settings")"
dependences="$( awk '/dependences: /{for(a=2;a<NF;a++) {printf( "%s " , $a)}}' "$ffmpeg_service_menu_settings")"
configure="$( awk '/configure: /{for(a=2;a<NF;a++) {printf( "%s " , $a)}}' "$ffmpeg_service_menu_settings")"

screencastfunctionfastcpu="$( awk  '/Screencast Fast Cpu:/{for(i=4;i<=NF; i++) {printf( " %s " , $i)}}'  "$ffmpeg_service_menu_settings" |awk '{gsub(/hw 0\,0/,"hw\:0\,0"); print}')"

screencastfunctionfastcpu_detect="$( awk  '/Screencast Fast Cpu Detect Window:/{for(i=6;i<=NF; i++) {printf( " %s " , $i)}}'  "$ffmpeg_service_menu_settings" |awk '{gsub(/hw 0\,0/,"hw\:0\,0"); print}')"

screencastfunctionslowcpu="$( awk  '/Screencast Slow Cpu:/{for(i=4;i<=NF; i++) {printf( " %s " , $i)}}'  "$ffmpeg_service_menu_settings" |awk '{gsub(/hw 0\,0/,"hw\:0\,0"); print}')"

screencastfunctionslowcpu_detect="$( awk  '/Screencast Slow Cpu Detect Window:/{for(i=6;i<=NF; i++) {printf( " %s " , $i)}}'  "$ffmpeg_service_menu_settings" |awk '{gsub(/hw 0\,0/,"hw\:0\,0"); print}')"
 
 
 

#awk  '/Screencast Slow Cpu Detect Window:/{for(i=6;i<=NF; i++) {printf( " %s " , $i)}}' |awk {gsub(/hw 0,0/,"hw:0,0"); print}
case "$overwrite" in

 [y/Y]|[-y/-Y]|[y/Y][e/E][s/S])
overwrite="-y"

;;

*)
overwrite=""
 
;;
esac


if [[ -z "$threads"  ]];then
	threadsdetected=$(awk '/processor/{print}' /proc/cpuinfo | wc -l)
	if [[ $threadsdetected  != *[!0-9]*  ]] ; then
			threads=1
		echo $"unable to detect cpu number ... bug?"
	else 
	threads="$threadsdetected"
	fi
 

fi

if [[ -z "$easy" ]] ; then 
commonaudioformats="3gp aiff aac ac3 alac ape atrac  flac  m4a m4p midi mmf mp3 mp2 ogg oga ra rm ram tta wav wavpack wma"
fi 

if [[ -z "$commonaudioformats" ]] ; then 
commonaudioformats="3gp aiff aac ac3 alac ape atrac  flac  m4a m4p midi mmf mp3 mp2 ogg oga ra rm ram tta wav wavpack wma"
fi 

if [[ -z "$commonvideoformats" ]] ; then 
commonvideoformats="3gp 3gp2 3gpp asf avi dv flv m2ts mkv mov mpg  mpeg mpeg4 mp4 ogv rm swf ts vob vp8 xvid webm wmv"
fi 

case "$passivepopup" in

 enabled|[y/Y]|[y/Y][e/E][s/S])
passivepopup="enabled"

;;

*)
passivepopup=""
 
;;
esac

if [[ -z "$xtexteditor" ]]; then 
	xtexteditor="kde-open"
fi

if [[ -z "$texteditor" ]]; then 
	texteditor="nano"
fi

# numberofpass=$(awk  -F':' '/number of pass:/{gsub(/ /,"");print $2}' "$ffmpeg_service_menu_settings")
}

function_create_settings (){
commonaudioformats="3gp aiff aac ac3 alac ape atrac  flac  m4a m4p midi mmf mp3 mp2 ogg oga ra rm ram tta wav wavpack wma"
commonvideoformats="3gp 3gp2 3gpp asf avi dv flv m2ts mkv mov mpg  mpeg mpeg4 mp4 ogv rm swf ts vob vp8 xvid webm wmv"
screencastfunctionfastcpu="-s $(xrandr | awk '/, current /{gsub(/\,/,""); print $8"x"$10}') -i :0.0   -r 15 -vcodec h264   -f alsa -ac 2  -i hw:0,0 -ar 48000  -acodec pcm_s16le  -threads $(awk '/processor/{print}' /proc/cpuinfo | wc -l) -y $HOME/Screencast.avi"
screencastfunctionfastcpu_detect=" -r 15 -vcodec h264   -f alsa -ac 2  -i hw:0,0 -ar 48000  -acodec pcm_s16le  -threads $(awk '/processor/{print}' /proc/cpuinfo | wc -l) -y $HOME/Screencast.avi"

screencastfunctionslowcpu="-s $(xrandr | awk '/, current /{gsub(/\,/,""); print $8"x"$10}') -i :0.0   -f  alsa  -ac 2 -ar 48000  -i hw:0,0   -acodec pcm_s16le  -vcodec  ljpeg -r 15  -threads $(awk '/processor/{print}' /proc/cpuinfo | wc -l) -y $HOME/Screencast.avi"
screencastfunctionslowcpu_detect="-f  alsa  -i hw:0,0  -ac 2 -ar 48000 -acodec pcm_s16le -r 15 -vcodec  ljpeg -threads $(awk '/processor/{print}' /proc/cpuinfo | wc -l) -y $HOME/Screencast.avi"


if [[ -z "$pidofx" ]] ; then

	
echo $"Text Editor to use with X server : kate kwrite etc press ENTER For kate or write what you like"
read   

	if [[ -z "$REPLY" ]];then
		xtexteditor="kate"
	else
		xtexteditor="$REPLY"
	fi
REPLY=""
echo



echo $"Text Editor to use in konsole mode : nano vim vi  etc press ENTER For nano or write what you like"
read   

	if [[ -z "$REPLY" ]];then
		texteditor="nano"
	else
		texteditor="$REPLY"
	fi
REPLY=""
echo


echo $"always overwrite files (yes\no) press ENTER FOR yes"
read   

	if [[ -z "$REPLY" ]];then
		overwrite="yes"
	else 
		overwrite="$REPLY"
	fi
REPLY=""
echo 

echo $"How many cpu should FFmpeg use? 1 2 3 4 5 etc press ENTER for 1 "
read   
	if [[ -z "$REPLY" ]];then
		threads=1
	else 
		if [[ ! $threadsdetected  != *[!0-9]*  ]] ; then
			threads=1
		else
			threads="$REPLY"
		fi 
		
	fi
REPLY=""
echo 


echo $"Write your easy profile that FFmpeg should use if you don't know type -sameq"
read   
	if [[ -z "$REPLY" ]];then
		easyprofile="-sameq"
	else 
		easyprofile="$REPLY"
	fi

REPLY=""
echo
echo $"Where is ffmpeg or avconv path ? Press ENTER for this path:   $(type -p ffmpeg) "
read  -e 
	if [[ -z "$REPLY" ]];then
	   ffmpegpath="$(type -p ffmpeg)"
	else 
		ffmpegpath="$REPLY"
	fi
echo $"Where is ffprobe or avprobe path ? Press ENTER for this path: $(type -p ffprobe) "
read  -e 
	if [[ -z "$REPLY" ]];then
	   probe="$(type -p ffprobe)"
	else 
		probe="$REPLY"
	fi	
REPLY=""


echo $"Choose your prefered format Press ENTER for mp3"
read  
 
	if [[ -z "$REPLY" ]];then
		defaultformat="mp3"
	else 
		defaultformat="$REPLY"
	fi


REPLY=""
echo 
echo $"Audio Formats i should detect if i add a folder : now they are  $commonaudioformats \n do you want add one ? Press ENTER or leave empty if you don't know"
read   
	if [[ -z "$REPLY" ]];then
		echo $commonaudioformats 
	else 
		commonaudioformats="$commonaudioformats $REPLY"
	fi
echo
REPLY=""
echo $"Video Formats i should detect if i add a folder : now they are  $commonvideoformats \n do you want add one ? Press ENTER or leave empty if you don't know"
read  
	if [[ -z "$REPLY" ]];then
		echo $commonvideoformats 
	else 
		commonvideoformats="$commonvideoformats $REPLY"
	fi
REPLY=""
echo
echo $"Passive popup should be enabled or disabled ? (enabled\disabled) leave empty for enabled"
read  
	if [[ -z "$REPLY" ]];then
		passivepopup="enabled"
	else 
		passivepopup="$REPLY"
	fi

REPLY=""
echo
echo $"How many pass should ffmpeg make ? 1 for sigle pass ( reccomended) 2 for double pass this will take 2x time to encode... press enter or leave empty if you don't know"
read 
	if [[ -z "$REPLY" ]];then
		numberofpass="1" 
	else 
		numberofpass="$REPLY"
	fi
echo
REPLY=""
echo $"FFmpeg or Avconv Function to record video (VERSION SMALL SIZE FILE BUT MUCH MORE WORK FOR CPU)"
echo 
echo "this is the current version $screencastfunctionfastcpu  press ENTER if you don't know or you just like it"
read  
	if [[ -z "$REPLY" ]];then
		screencastfunctionfastcpu=$screencastfunctionfastcpu
	else 
		screencastfunctionfastcpu="$REPLY"
	fi 
REPLY=""
echo
echo $"FFmpeg or Avconv Function to record video VERSION DETECT WINDOW SMALL SIZE FILE BUT MUCH MORE WORK FOR CPU)"
echo 
echo "this is the current version $screencastfunctionfastcpu_detect  press ENTER if you don't know or you just like it"
read  
	if [[ -z "$REPLY" ]];then
		echo $"Default $screencastfunctionfastcpu_detect choosen"
	else 
		screencastfunctionfastcpu_detect="$REPLY"
	fi 
REPLY=""
echo
echo $"FFmpeg or Avconv Function to record video (VERSION FAST BUT BIG FILES)"
echo 
echo "this is the current version $screencastfunctionslowcpu  press ENTER if you don't know or you just like it"
read
	if [[ -z "$REPLY" ]];then
		echo $"Default $screencastfunctionslowcpu choosen"
	else 
		screencastfunctionslowcpu="$REPLY"
	fi 	
REPLY=""
echo 
echo $"FFmpeg or Avconv Function to record video (DETECT WINDOW VERSION FAST BUT BIG FILES)"
echo 
echo "this is the current version $screencastfunctionslowcpu_detect  press ENTER if you don't know or you just like it"
read
	if [[ -z "$REPLY" ]];then
		echo $"Default $screencastfunctionslowcpu_detect choosen"
	else 
		screencastfunctionslowcpu_detect="$REPLY"
	fi 	
 
	
else
		xtexteditor="$(kdialog --textinputbox  $"Text Editor to use with X server : kate kwrite etc press ENTER For kde-open or write what you like" --  kde-open )"
		texteditor="$(kdialog --textinputbox  $"Text Editor to use in konsole mode : nano vi vim etcc press ENTER For nano or write what you like" --  "nano" )"
		overwrite="$(kdialog --combobox $"always overwrite files " yes no --default no )"
		threads="$(kdialog --combobox $"How many core should FFmpeg use" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 --default 1)"
		easyprofile="$(kdialog --textinputbox  $"write here your easy profile" --  -sameq )"
		ffmpegpath="$(kdialog --title $"WHERE SHOULD I LOOK FOR FFMPEG BINARY?" --getopenfilename  "/usr/bin" ffmpeg )"
		probe="$(kdialog --title $"WHERE SHOULD I LOOK FOR FFPROBE OR AVPROBE BINARY?" --getopenfilename  "/usr/bin" ffprobe )"
		commonaudioformats="$(kdialog --title $"audio detected formats for folders" --checklist  $"AUDIO Select the formats FFmpeg service menu should detected when you would like add a folder" 3ga 3ga off 4mp 4mp off 669 669 off 6cm 6cm off 8cm 8cm off 8med 8med off 8svx 8svx off a2m a2m off a52 a52 off aa aa off aa3 aa3 off aac aac on aax aax off ab ab off abc abc off abm abm off ac3 ac3 on acd acd off acd-bak acd-bak off acd-zip acd-zip off acm acm off acp acp off act act off adg adg off adt adt off adts adts off adv adv off afc afc off agm agm off ahx ahx off aif aif off aifc aifc off aiff aiff on ais ais off akp akp off al al off alac alac on alaw alaw off alc alc off all all off als als off amf amf off amr amr off ams ams off ams ams off amxd amxd off aob aob off ape ape on apf apf off apl apl off aria aria off ariax ariax off asd asd off ase ase off at3 at3 off atrac atrac on au au off au au off aud aud off aup aup off avastsounds avastsounds off avr avr off awb awb off ay ay off b4s b4s off band band off bap bap off bcs bcs off bdd bdd off bidule bidule off box box off brstm brstm off bun bun off bwf bwf off c01 c01 off caf caf off caff caff off cda cda off cdda cdda off cdlx cdlx off cdo cdo off cdr cdr off cel cel off cfa cfa off cfxr cfxr off cidb cidb off cmf cmf off copy copy off cpr cpr off cpt cpt off csh csh off cwp cwp off d00 d00 off d01 d01 off dcf dcf off dcm dcm off dct dct off ddt ddt off dewf dewf off df2 df2 off dfc dfc off dig dig off dig dig off djr djr off dls dls off dm dm off dmf dmf off dmsa dmsa off dmse dmse off dra dra off drg drg off ds ds off ds2 ds2 off dsf dsf off dsm dsm off dsp dsp off dss dss off dtm dtm off dts dts off dtshd dtshd off dvf dvf off dwa dwa off dwd dwd off ear ear off efa efa off efe efe off efk efk off efq efq off efs efs off efv efv off emd emd off emp emp off emx emx off emy emy off esps esps off expressionmap expressionmap off f2r f2r off f32 f32 off f3r f3r off f4a f4a off f64 f64 off far far off fda fda off fff fff off flac flac on flp flp off fls fls off frg frg off fsm fsm off ftm ftm off fzb fzb off fzf fzf off fzv fzv off g721 g721 off g723 g723 off g726 g726 off gbproj gbproj off gbs gbs off gig gig off gio gio off gio gio off gm gm off gp5 gp5 off gpbank gpbank off gpk gpk off gpx gpx off gro gro off groove groove off gsm gsm off gsm gsm off h0 h0 off hdp hdp off hma hma off hmi hmi off hsb hsb off ics ics off iff iff off igp igp off igr igr off imf imf off imp imp off ins ins off ins ins off isma isma off it it off iti iti off its its off jam jam off jam jam off jo jo off jo-7z jo-7z off k25 k25 off k26 k26 off kar kar off kfn kfn off kin kin off kit kit off kmp kmp off koz koz off koz koz off kpl kpl off krz krz off ksc ksc off ksf ksf off kt2 kt2 off kt3 kt3 off ktp ktp off l l off la la off lof lof off logic logic off lqt lqt off lso lso off lvp lvp off lwv lwv off m1a m1a off m3u m3u off m3u8 m3u8 off m4a m4a on m4b m4b off m4p m4p on m4r m4r off ma1 ma1 off mbr mbr off mdl mdl off med med off mgv mgv off mid mid off midi midi on miniusf miniusf off mka mka off mlp mlp off mmf mmf on mmm mmm off mmp mmp off mo3 mo3 off mod mod off mp1 mp1 off mp2 mp2 on mp3 mp3 on mpa mpa off mpc mpc off mpga mpga off mpu mpu off mp_ mp_ off mscx mscx off mscz mscz off msv msv off mt2 mt2 off mt9 mt9 off mte mte off mtf mtf off mti mti off mtm mtm off mtp mtp off mts mts off mu3 mu3 off mui mui off mus mus off mus mus off mus mus off musa musa off mux mux off mux mux off muz muz off mws mws off mx3 mx3 off mx4 mx4 off mx5 mx5 off mx5template mx5template off mxl mxl off mxmf mxmf off myr myr off mzp mzp off nap nap off nbs nbs off ncw ncw off nkb nkb off nkc nkc off nki nki off nkm nkm off nks nks off nkx nkx off npl npl off nra nra off nrt nrt off nsa nsa off nsf nsf off nst nst off ntn ntn off nvf nvf off nwc nwc off odm odm off ofr ofr off oga oga on ogg ogg on okt okt off oma oma off omf omf off omg omg off omx omx off orc orc off ots ots off ove ove off ovw ovw off ovw ovw off pac pac off pat pat off pbf pbf off pca pca off pcast pcast off pcg pcg off pcm pcm off pd pd off peak peak off pek pek off pho pho off phy phy off pk pk off pkf pkf off pla pla off pls pls off plst plst off ply ply off pna pna off pno pno off ppc ppc off ppcx ppcx off prg prg off prg prg off psf psf off psm psm off psy psy off ptf ptf off ptm ptm off pts pts off pvc pvc off qcp qcp off r r off r1m r1m off ra ra on ram ram on raw raw off rax rax off rbs rbs off rbs rbs off rcy rcy off record record off rex rex off rfl rfl off rip rip off rmf rmf off rmi rmi off rmj rmj off rmm rmm off rmx rmx off rng rng off rns rns off rol rol off rsn rsn off rso rso off rti rti off rtm rtm off rts rts off rvx rvx off rx2 rx2 off s3i s3i off s3m s3m off s3z s3z off saf saf off sam sam off sap sap off sb sb off sbg sbg off sbi sbi off sbk sbk off sc2 sc2 off sd sd off sd sd off sd2 sd2 off sd2f sd2f off sdat sdat off sdii sdii off sds sds off sdt sdt off sdx sdx off seg seg off seq seq off ses ses off sesx sesx off sf sf off sf2 sf2 off sfap0 sfap0 off sfk sfk off sfl sfl off sfs sfs off shn shn off sib sib off sid sid off sma sma off smf smf off smp smp off smp smp off snd snd off snd snd off snd snd off sng sng off sng sng off sou sou off sph sph off sppack sppack off sprg sprg off spx spx off sseq sseq off sseq sseq off ssnd ssnd off stap stap off stm stm off stx stx off sty sty off sty sty off svd svd off svx svx off sw sw off swa swa off sxt sxt off syh syh off syn syn off syn syn off syw syw off syx syx off tak tak off tak tak off td0 td0 off tfmx tfmx off tg tg off thx thx off toc toc off tsp tsp off tta tta on tun tun off txw txw off u u off u8 u8 off uax uax off ub ub off ulaw ulaw off ult ult off ulw ulw off uni uni off usf usf off usflib usflib off uw uw off uwf uwf off v2m v2m off vag vag off val val off vap vap off vb vb off vc3 vc3 off vdj vdj off vgm vgm off vgz vgz off vlc vlc off vmd vmd off vmf vmf off vmf vmf off vmo vmo off voc voc off voi voi off vox vox off vpm vpm off vqf vqf off vrf vrf off vsq vsq off vtx vtx off vyf vyf off w01 w01 off w64 w64 off wav wav on wav wav on wave wave off wax wax off wem wem off wfb wfb off wfd wfd off wfp wfp off wma wma on wow wow off wpk wpk off wpp wpp off wproj wproj off wrk wrk off wtpl wtpl off wtpt wtpt off wus wus off wut wut off wv wv off wvc wvc off wve wve off wwu wwu off wyz wyz off xa xa off xa xa off xfs xfs off xi xi off xm xm off xmf xmf off xmi xmi off xmz xmz off xp xp off xrns xrns off xsb xsb off xspf xspf off xt xt off xwb xwb off ym ym off zpa zpa off zpl zpl off zvd zvd off zvr zvr off | awk '{gsub(/\"/,""); print }'  )"
		commonvideoformats="$(kdialog --title $"video detected formats for folders" --checklist  $"VIDEO Select the formats FFmpeg service menu should detected when you would like add a folder" 264 264 off 3g2 3g2 off 3gp 3gp on 3gp2 3gp2 on 3gpp 3gpp on 3gpp2 3gpp2 off 3mm 3mm off 3p2 3p2 off 60d 60d off 787 787 off 890 890 off aaf aaf off aep aep off aepx aepx off aet aet off aetx aetx off ajp ajp off ale ale off am am off amc amc off amv amv off amx amx off anim anim off arcut arcut off arf arf off asf asf on asx asx off avb avb off avd avd off avi avi on avp avp off avs avs off avs avs off axm axm off bdm bdm off bdmv bdmv off bdt2 bdt2 off bdt3 bdt3 off bik bik off bin bin off bix bix off bmk bmk off bnp bnp off box box off bs4 bs4 off bsf bsf off byu byu off camproj camproj off camrec camrec off camv camv off cel cel off cine cine off cip cip off clpi clpi off cmmp cmmp off cmmtpl cmmtpl off cmproj cmproj off cmrec cmrec off cpi cpi off cst cst off cvc cvc off d2v d2v off d3v d3v off dat dat off dav dav off dce dce off dck dck off dcr dcr off dcr dcr off ddat ddat off dif dif off dir dir off divx divx off dlx dlx off dmb dmb off dmsd dmsd off dmsd3d dmsd3d off dmsm dmsm off dmsm3d dmsm3d off dmss dmss off dmx dmx off dnc dnc off dpa dpa off dpg dpg off dream dream off dsy dsy off dv dv on dv-avi dv-avi off dv4 dv4 off dvdmedia dvdmedia off dvr dvr off dvr-ms dvr-ms off dvx dvx off dxr dxr off dzm dzm off dzp dzp off dzt dzt off edl edl off evo evo off eye eye off ezt ezt off f4p f4p off f4v f4v off fbr fbr off fbr fbr off fbz fbz off fcp fcp off fcproject fcproject off flc flc off flh flh off fli fli off flv flv on flx flx off gfp gfp off gl gl off gom gom off grasp grasp off gts gts off gvi gvi off gvp gvp off h264 h264 off hdmov hdmov off hkm hkm off ifo ifo off imovieproj imovieproj off imovieproject imovieproject off ircp ircp off irf irf off ism ism off ismc ismc off ismv ismv off iva iva off ivf ivf off ivr ivr off ivs ivs off izz izz off izzy izzy off jss jss off jts jts off jtv jtv off k3g k3g off lrec lrec off lsf lsf off lsx lsx off m15 m15 off m1pg m1pg off m1v m1v off m21 m21 off m21 m21 off m2a m2a off m2p m2p off m2t m2t off m2ts m2ts off m2v m2v off m4e m4e off m4u m4u off m4v m4v off m75 m75 off meta meta off mgv mgv off mj2 mj2 off mjp mjp off mjpg mjpg off mk3d mk3d off mkv mkv on mmv mmv off mnv mnv off mob mob off mod mod off modd modd off moff moff off moi moi off moov moov off mov mov on movie movie off mp21 mp21 off mp21 mp21 off mp2v mp2v off mp4 mp4 on mp4v mp4v off mpe mpe off mpeg mpeg on mpeg4 mpeg4 on mpf mpf off mpg mpg on mpg2 mpg2 off mpgindex mpgindex off mpl mpl off mpls mpls off mpsub mpsub off mpv mpv off mpv2 mpv2 off mqv mqv off msdvd msdvd off mse mse off msh msh off mswmm mswmm off mts mts off mtv mtv off mvb mvb off mvc mvc off mvd mvd off mve mve off mvex mvex off mvp mvp off mvp mvp off mvy mvy off mxf mxf off mys mys off ncor ncor off nsv nsv off nuv nuv off nvc nvc off ogm ogm off ogv ogv on ogx ogx off osp osp off pac pac off par par off pds pds off pgi pgi off photoshow photoshow off piv piv off playlist playlist off plproj plproj off pmf pmf off pmv pmv off pns pns off ppj ppj off prel prel off pro pro off prproj prproj off prtl prtl off psh psh off pssd pssd off pva pva off pvr pvr off pxv pxv off qt qt off qtch qtch off qtl qtl off qtm qtm off qtz qtz off r3d r3d off rcd rcd off rcproject rcproject off rdb rdb off rec rec off rm rm on rmd rmd off rmd rmd off rmp rmp off rms rms off rmv rmv off rmvb rmvb off roq roq off rp rp off rsx rsx off rts rts off rts rts off rum rum off rv rv off rvl rvl off sbk sbk off sbt sbt off scc scc off scm scm off scm scm off scn scn off screenflow screenflow off sec sec off seq seq off sfd sfd off sfvidcap sfvidcap off siv siv off smi smi off smi smi off smil smil off smk smk off sml sml off smv smv off spl spl off sqz sqz off srt srt off ssm ssm off stl stl off str str off stx stx off svi svi off swf swf on swi swi off swt swt off tda3mt tda3mt off tdx tdx off tivo tivo off tix tix off tod tod off tp tp off tp0 tp0 off tpd tpd off tpr tpr off trp trp off ts ts on tsp tsp off tvs tvs off usm usm off vc1 vc1 off vcpf vcpf off vcr vcr off vcv vcv off vdo vdo off vdr vdr off vdx vdx off veg veg off vem vem off vep vep off vf vf off vft vft off vfw vfw off vfz vfz off vgz vgz off vid vid off video video off viewlet viewlet off viv viv off vivo vivo off vlab vlab off vob vob off vp3 vp3 off vp6 vp6 off vp7 vp7 off vpj vpj off vro vro off vs4 vs4 off vse vse off vsp vsp off w32 w32 off wcp wcp off webm webm on wlmp wlmp off wm wm off wmd wmd off wmmp wmmp off wmv wmv on wmx wmx off wot wot off wp3 wp3 off wpl wpl off wtv wtv off wvx wvx off xej xej off xel xel off xesc xesc off xfl xfl off xlmv xlmv off xvid xvid off yuv yuv off zm1 zm1 off zm2 zm2 off zm3 zm3 off zmv zmv off | awk '{gsub(/\"/,""); print }'  )"
		
		defaultformat="$(kdialog --combobox $"Choose your prefered format" $commonaudioformats $commonvideoformats )"
		passivepopup="$(kdialog --combobox $"Do you want enable Popups to warm you about \"job done\"  or errors ?"  $"enabled" $"disabled" --default $"enabled" )"
		
		numberofpass="$(kdialog --combobox $"How many pass should ffmpeg make? 1 for Sigle pass (reccomended) 2 for double pass" 1 2 --default 1)"
		screencastfunctionfastcpu="$(kdialog --textinputbox  $"Function to record your screen for FAST CPU ,If you don't know or you just like it leave it as it is " --  "$screencastfunctionfastcpu" )"
		screencastfunctionfastcpu_detect="$(kdialog --textinputbox  $"Function to record your screen for FAST CPU ,If you don't know or you just like it leave it as it is " --  "$screencastfunctionfastcpu_detect" )"
		
		screencastfunctionslowcpu="$(kdialog --textinputbox  $"Function to record your screen for SLOW CPU ,If you don't know or you just like it leave it as it is " --  "$screencastfunctionslowcpu" )"
		screencastfunctionslowcpu_detect="$(kdialog --textinputbox  $"Function to record your screen for SLOW CPU ,If you don't know or you just like it leave it as it is " --  "$screencastfunctionslowcpu_detect" )"
fi
	
echo "xtexteditor: $xtexteditor" >"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "texteditor: $texteditor" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "overwrite: $overwrite" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "number of pass: $numberofpass" >>$ffmpeg_service_menu_settings
echo "" >>"$ffmpeg_service_menu_settings"
echo "cpu: $threads" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "easyprofile: $easyprofile" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "prefered default format: $defaultformat" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "common audio formats: $commonaudioformats"  >>$ffmpeg_service_menu_settings
echo "" >>"$ffmpeg_service_menu_settings"
echo "common video formats: $commonvideoformats"  >>$ffmpeg_service_menu_settings
echo "" >>"$ffmpeg_service_menu_settings"
echo "passive popup: $passivepopup"  >>$ffmpeg_service_menu_settings
echo "" >>"$ffmpeg_service_menu_settings"
echo "ffmpegpath or avconvpath: "$ffmpegpath"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "ffprobe or avprobe: "$probe"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "Screencast Fast Cpu: "$screencastfunctionfastcpu"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "Screencast Fast Cpu Detect Window: "$screencastfunctionfastcpu_detect"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "Screencast Slow Cpu: "$screencastfunctionslowcpu"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
echo "Screencast Slow Cpu Detect Window: "$screencastfunctionslowcpu_detect"" >>"$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"
 
function_load_settings
}



function_edit_profile () {
ans=""
if [[ -z "$pidofx" ]];then

	editprofile=(Audio Device Video $"Back To the Main Menu")
	a=0
	b=7

	clear
	tput cup 0 16
	tput setaf 2


	echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

	tput cup 5 16
	tput rev 
	echo $"Choose Which Profile You Want Edit"
	tput sgr0
	for e in "${editprofile[@]}" ; do 
		c=$(($b+$a))
		tput cup $c 16
		echo "$(($a+1)). ${editprofile[$a]}"
		a=$(($a+1)) 
	done




	tput bold
	echo
	tput cup $(($c+2)) 16
	echo $"Enter Your Choice (1-${#editprofile[@]})"
	read 
	ans="${editprofile[$(($REPLY-1))]}"
	echo ""$ans""
	
else
 
ans="$(kdialog --title $"Edit Profiles" --combobox $"Choose Which Profile You Want To edit.." $"Audio" $"Device" $"Video" --default $"Video" )"
echo $ans
fi

case "$ans" in 
"Back To the Main Menu")
function_menu_start
;;
Audio)
function_open_text_file "$ffmpeg_profile_file_audio"
;;
Device)
function_open_text_file "$ffmpeg_profile_file_device"
;;
Video)
function_open_text_file "$ffmpeg_profile_file_video"
;;

*)
function_menu_start

;;
esac
function_menu_start
}

function_detect_window () {
INFO="$(xwininfo -frame)"
window_geometry="$(echo $INFO | grep -oEe 'geometry [0-9]+x[0-9]+' | grep -oEe '[0-9]+x[0-9]+')"
window_xy="$(echo $INFO | grep -oEe 'Corners:\s+\+[0-9]+\+[0-9]+' | grep -oEe '[0-9]+\+[0-9]+' | sed -e 's/\+/,/' )"

if [[ -z "$window_geometry" || -z "$window_xy" ]] ; then 
function_message_error $"Unable to detect window geometry i did xwininfo -frame and the result was empty! fix this or mail me $Author "
fi 
}
function_record_screen (){

if [[ -z "$pidofx" ]]; then 

case "$1" in 

fullscreen_fast)
echo "this is the function $ffmpegpath -f x11grab $screencastfunctionfastcpu"
$ffmpegpath -f x11grab  $screencastfunctionfastcpu
;;

detectwindow_fast)
function_detect_window
 echo "this is the function $ffmpegpath -f x11grab  -s $window_geometry -i :0.0+$window_xy  $screencastfunctionfastcpu_detect"
$ffmpegpath -f x11grab  -s $window_geometry -i :0.0+$window_xy    $screencastfunctionfastcpu_detect
;;

fullscreen_compress)
echo "this is the function  $ffmpegpath -f x11grab $screencastfunctionslowcpu"
$ffmpegpath -f x11grab $screencastfunctionslowcpu 
;;

detectwindow_compress)
function_detect_window
echo "$ffmpegpath -f x11grab  -s $window_geometry -i :0.0+$window_xy  $screencastfunctionslowcpu_detect"
$ffmpegpath -f x11grab  -s $window_geometry -i :0.0+$window_xy  $screencastfunctionslowcpu_detect
;;

*)
echo $"wrong :P"
function_record_screen_menu
;;
esac
fi 

}

function_test_ffmpeg () {

encoderfail=""
encodersuccess=""
for codecs in  $commonaudioformats $commonvideoformats ; do 

encoderfailtest=$(ffmpeg -codecs 2>&1 | grep "$codecs" | grep E)

	if [[ -z "$encoderfailtest" ]] ; then
		encoderfail="$encoderfail $encoderfailtest"
	else  
		encodersuccess="$encodersuccess $encodersuccesstest"
	fi 

done



encoderfail=$(awk '{gsub(/ /,""); print}' << _EOF 
$encoderfail
_EOF
)



if [[ -z $encoderfail ]] ;then
function_message $" FFMPEG TEST SUCCEEDED

You can encode in


$commonaudioformats 

and

$commonvideoformats 

WITHOUT PROBLEMS

if you get errors you need to upgrade profiles if you used those to convert your files"
else
function_message_error $"you can't encode in $encoderfail please install the packages you need or compile ffmpeg properly "
fi 

}

function_delete_settings () {


function_create_settings
function_menu_start

}

##check program#########################################
checkprogram(){

 
if [[ -z  $ffmpegpath ]]  ;then


ffmpegpath=$(type -p ffmpeg)

if [[ -z "$ffmpegpath"  ]]; then #if is empty

	if [[ -z "$pidofx" ]] ; then
		echo $"ffmpeg is not system installed, please give me a ffmpeg's path"
		read
		ffmpegpath="$REPLY"
			if [[ -z "$ffmpegpath"  ]]; then
				echo $"ffmpegpath empty... exiting"
			fi
	else	
		kdialog --title $"INSERT FFMPEG PATH" --textinputbox $"ffmpeg is not installed in your system or i am not able to detect it, please give me a ffmpeg's path"
		ffmpegpath=$(kdialog --getopenfilename  "/usr/local/bin")
			if [[ -z "$ffmpegpath"  ]]; then
				kdialog --passivepopup $"ffmpegpath empty... exiting" 3
			fi
	fi
fi


if [[ -z "$pidofx" ]] ; then

	program[0]=ffmpeg
	program[1]=awk
	#program[2]=kdialog
	for program in "${program[@]}";
	do if ! type -p "$program" >/dev/null;
	then echo "$program not found; PLEASE INSTALL IT" >&2
	echo "error exiting..." >&2
	exit 1;
	fi; done

else
#	 program[0]=ffmpeg
	program[1]=awk
#	 program[2]=kdialog
	for program in "${program[@]}";
	do if ! type -p "$program" >/dev/null;
	then kdialog --msgbox $"$program not found; PLEASE INSTALL IT" >&2
	echo "error exiting..." >&2
	exit 1;
	fi; done
	
fi

else

echo $"Check FFmpeg ....Ok"

fi


}

function_message(){
if [[ -z "$pidofx" ]] ; then

message=""$1""

else

kdialog --msgbox "$1"
fi


}


function_message_error (){

if [[ -z "$pidofx" ]] ; then

	
message="ERROR $1"

else

kdialog --error "$1"
fi


}

function_help (){

helptext=$"FFmpeg peace service menu Author: $Author Version: $Version License: $license 


USE:

-h print this help                 No X server
-hx print this help                With X server
-f <file1> <file2> ..              Add files to conversion list
-fo <folder1> <folder2>...         Add Folders to conversion list
-fox <folder1> <folder2>...        Add Folders to conversion list  
-e                                 Edit conversion list with nano
-ek                                Edit conversion list with kate  
-d                                 DELETE convesion list
-r                                 RESTORE you old conversion list
-mx                                start the kdialog menu  
-wx                                start the script for servers

WARMING 

THIS SCRIPT IS STUDIED FOR FFMPEG on ubuntu you can get 
avconv or a fake ffmpeg you can recognize it because it says 

*** THIS PROGRAM IS DEPRECATED ***
so some profiles don't work.

this script help you to convert files with dolphin and via shell:

ffmpeg-peace-service-menu can use profiles file that are stored here:
audio  $ffmpeg_profile_file_audio
device $ffmpeg_profile_file_device
video  $ffmpeg_profile_file_video

it read the list of your files to convert from a file that is located here:

$listoffile

in this file there are all the settings :  $ffmpeg_service_menu_settings



Version : $Version Author: $Author License: $License
"

case $1 in
 
x)


kdialog --title "$title" --msgbox "$helptext"

;;

*)
echo "$helptext"
;;

esac
 


}



function_delete_profiles(){

if [[ -e "$ffmpeg_profile_file_audio" && -e "$ffmpeg_profile_file_device" && -e "$ffmpeg_profile_file_video" ]] ;then
mv "$ffmpeg_profile_file_audio" "$HOME"/.local/share/Trash/files/
mv "$ffmpeg_profile_file_device" "$HOME"/.local/share/Trash/files/
mv "$ffmpeg_profile_file_video" "$HOME"/.local/share/Trash/files/
fi
function_generate_audio_preset
function_generate_device_preset
function_generate_video_preset
function_menu_start
}


function_delete (){
if [[ -e "$listoffile" && -e "$templog"   ]] ; then


function_passivepopup_test "mv "$listoffile"  $HOME/.local/share/Trash/files/
mv "$templog"  "$HOME"/.local/share/Trash/files/ "
mv "$listoffile"  $HOME/.local/share/Trash/files/
mv "$templog"  "$HOME"/.local/share/Trash/files/
# function_passivepopup_test $"Old list  $listoffile deleted and Old log $templog deleted"
# 
# elif [[ ! -e "$listoffile" ]] ; then
# function_passivepopup_test $"i can't do it i can't find the file $listoffile"
# elif [[ ! -e "$templog" ]] ; then
# function_passivepopup_test $"i can't do it i can't find the file $templog"
else
function_passivepopup_test $"i can't do it i can't find the file  $listoffile $templog 

Please add some files to $listoffile? 

run this :

ffmpeg-peace-service-menu -f file1 file2 file3

or if you prefer add a folder 

ffmpeg-peace-service-menu -fox folder1 folder2 folder3
"
fi



if [[ -z $1 ]] ; then 
    function_menu_start
elif [[ "$1" == "silent" ]] ; then
echo 
fi 
 
}






function_restore(){

if [[ -e "$HOME"/.local/share/Trash/files/ffmpeg-service-menu-qt.lst && -e  "$HOME/.local/share/Trash/files/ffmpeg_peace_dolphin_service_menu.log" ]] ; then

 mv   "$HOME/.local/share/Trash/files/ffmpeg-service-menu-qt.lst" "$listoffile"
 mv   "$HOME/.local/share/Trash/files/ffmpeg_peace_dolphin_service_menu.log"  "$templog"
 
function_passivepopup_test $"List of files and $templog Restored"

elif [[ ! -e "$HOME/.local/share/Trash/files/ffmpeg-service-menu-qt.lst" ]] ; then
function_message_error $"i can't do it i can't find List of file  in your trash."
elif [[ ! -e "$HOME/.local/share/Trash/files/ffmpeg_peace_dolphin_service_menu.log" ]] ; then
function_message_error $"i can't do it i can't find old log in your trash."
else
function_message_error $"i can't do it i can't find List of file and templog in your trash."
fi

 
 
function_menu_start
}







function_reload_function(){
$1
}


function_passivepopup (){

kdialog --passivepopup "$1" "$2"

}

function_passivepopup_test (){

if [[ ! -z  "$pidofx" ]]; then 
	if [[ "$passivepopup" == "enabled" ]] ; then

		if [[ ! -z "$1" ]] ;then
	
			if [[ "$1" == "FFmpeg service menu : Jobs done!"  ]]; then 
		
			function_passivepopup "$1" 3
		
			else
				if [[ -z "$2" ]];then
		
					function_passivepopup "$1"
				else
					function_passivepopup "$1" "$2"
				fi
			fi
		else
			function_message_error $"no text for popup given :S"
		fi
 
			
			

	
	else
	echo "$1"
	fi
else 
tput setaf 4
tput bold
message="$1"
tput setaf 7
fi 
}

function_open_log () {
 if (( askopen >= 1 )); then 
	function_message_error $"FFmpeg failed! check the log!"
	if [[ ! -z "$pidofx" ]]; then 
		ans=$(kdialog --yesno $"Do you want open the log.. I have found some error on the log? Errors Found $askopen")
			if [[ $? == 0 ]] ; then
				function_open_text_file "$templog"
				function_delete standard
			else
				function_menu_start
			fi
	else
		choice=""
		read -p $"Do you want open the log ?  (y\n )" choice
			case "$choice" in 
			y|Y|yes|YES)
			function_open_text_file "$templog"
			function_delete silent
			;;
			n|N|no|NO)
			function_menu_start
			;;
			*)
			echo $"Hey! i have said y or n you fucking idiot have choosen $choice .."
			exit 1
			;;
			esac
			

	fi 
elif [[ "$askopen" == 1 && "$resetlistafterconversion" == "yes" ]]; then

function_delete standard

elif [[ "$askopen" == 0 ]]; then
function_delete silent
fi

}

function_check_for_errors (){


founderr=""
errors[0]="No such file or directory"
errors[1]="for reading (No such file or directory)"
errors[2]="Unable to find a suitable output format for"
errors[3]="not found"
errors[4]="Error while opening encoder"
errors[5]="Fail"
errors[6]="Unknown encoder"
errors[7]="is experimental and might produce bad results"
errors[8]="maybe incorrect parameters such as bit_rate, rate, width or height"
errors[9]="Undefined constant or missing"
errors[10]="Error setting option flags to value" 
errors[11]="Unable to parse option value"
errors[12]="could not find codec parameters"
errors[13]="Could find no file with with path 'img%d.jpg'"
errors[14]="Could not write header for output file"
errors[15]="Invalid data found when processing input"
errors[16]="Application provided invalid, non monotonically increasing dts to muxer in stream"

askopen=0
for err in "${errors[@]}"; do
tester=$(grep "$err" "$templog")

if [[  $? == 0 ]]; then #if  $? the last command is not empty ! -z then you have to fuck D:
founderr="$err"
askopen=$(($askopen+1))
else
askopen=$askopen

fi
done


function_open_log 


}




function_addfile (){

if [[ ! -z "$pidofx" ]]; then 
	usersfiles="$(kdialog --title $"Select files you want convert" --separate-output  --multiple -getopenfilename "$HOME" )"
	for f in "$usersfiles";	do
		echo "$f" >>"$listoffile"
	done

else
	cd "$HOME"
	echo "$PWD"
	echo $"Add Files Tab Autocompletion is activated ;)"
	read -e -a files
	if [[ ! -z "${files[@]}" ]];then 
		for f in "${files[@]}";do
			echo "$f" >>"$listoffile"
		done
	else
	function_message_error $"Hey you fucking idiot you have not give me the file!"
	fi 
fi


}



function_add_folder (){

 

#shopt -s nullglob
function_passivepopup_test $"adding folder...this could take time..wait"
if [[ ! -z "$pidofx"  ]]; then 

	while read line ;do
		for extension in $commonaudioformats $commonvideoformats ; do

			if  [[ "$line" == *.$extension ]] ; then
				echo  "$line" >>"$listoffile"
			fi
		done
 
	done< <(find "$1" -type f)

else 

	while read line ;do
		for extension in $commonaudioformats $commonvideoformats ; do

			if  [[ "$line" == *.$extension ]] ; then
				echo $"adding $line"
				echo  "$line" >>"$listoffile"
			fi
		done
 
	done< <(find "$1" -type f)
fi
function_passivepopup_test $"adding folder...done"

}





function_add_folder_shell(){

#shopt -s nullglob
 echo  $"adding folder...this could take time..wait"
 
while read line ;do

for extension in $commonaudioformats $commonvideoformats; do

if  [[ "$line" == *.$extension ]] ; then

 echo  "$line" >>"$listoffile"
 
fi
done
 
done< <(find "$1" -type f)
 echo "adding folder $1 ">> "$templog"
 echo  $"adding folder...done"

}


function_set_ffmpegpath(){

if [[ -z "$pidofx" ]] ; then

echo $"Set ffmpeg path"
read -e 

if [[ -z "$REPLY" ]] ; then

echo $"empty path exiting.."
exit

else
ffmpegpath="$REPLY"
fi

else

answerffp="$(kdialog --title $"Set ffmpeg path" --getopenfilename "$HOME"  )"
if [[ -z "$answerffp" ]] ; then

kdialog  --title $"ffmpeg path empty" --error  $"empty path exiting.."
exit

else
ffmpegpath="$answerffp"
fi

fi

awk '!/ffmpeg/'  $ffmpeg_service_menu_settings >  /tmp/temp_awk_ffmpeg_peace_service_menu.lst
echo "ffmpegpath or avconvpath : "$ffmpegpath"" >>"/tmp/temp_awk_ffmpeg_peace_service_menu.lst"
mv /tmp/temp_awk_ffmpeg_peace_service_menu.lst "$ffmpeg_service_menu_settings"
echo "" >>"$ffmpeg_service_menu_settings"

}

 function_menu_profiles_antix () {
REPLY=""
profilename=() #reset arrays
profileoutformat=()
profilearray=()
 i=0
while read line ; do 
profilename[i]="$(awk '{print $1}' << _EOF
$line
_EOF
)"
profileoutformat[i]="$(awk '{print $2}' << _EOF
$line
_EOF
)"
profilearray[i]="$(awk '{for(a=3;a<=NF ; a++) {printf " %s ", $a}}' << _EOF
$line
_EOF
)"
i=$(($i+1))
done < "$1"

 
a=0
b=7

clear
tput cup 0 16
tput setaf 2


echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

tput cup 5 16
tput rev 
echo $"Choose a $2 Profile"
tput sgr0
for e in "${profilename[@]}" ; do 
c=$(($b+$a))
tput cup $c 16
echo "$(($a+1)). ${profilename[$a]}"
a=$(($a+1)) 
done

tput cup $(($c+1)) 16
echo $(($a+1)). $"Back To the Main Menu"

tput bold
tput cup $(($c+2)) 16
echo $"Enter Your Choice (1-$((${#profilename[@]}+1)))"
read 
ansprofile="${profilearray[$(($REPLY-1))]}"
outformat="${profileoutformat[$(($REPLY-1))]}"
case "$ansprofile" in 
"Back To the Main Menu")
function_menu_start
;;
*)
	if [[ -z "$ansprofile" ]]; then
		function_message_error  $"No profile given please select a profile"
		function_menu_start
	else
	profile=""$ansprofile""
	
	fi 
;;
esac
echo "profile "$profile" outformat: $outformat"

 
}

function_load_profiles_audio (){

if [[ ! -z "$pidofx" ]] ; then 
	ARGS="--menu \"choose your profile\" --"

	while read PROFILE OPTS; do

		ARGS="${ARGS} \"${OPTS}\" \"${PROFILE}\""
	done < $ffmpeg_profile_file_audio

	ansprofile=$(echo $ARGS | xargs kdialog)

	if [[ -z "$ansprofile" ]]; then
	function_passivepopup_test  $"No profile given please select a profile"
	function_menu_start
	fi
	echo $ansprofile

	profile="$(awk '{$1 = "" ; print}'<< _EOF
	$ansprofile
_EOF
)"

	echo $profile
	#feed awk with a fake file :D that has ansprofile liek text
	outformat="$(awk '{print $1}'<< _EOF
$ansprofile
_EOF
)"

	echo $outformat
else
	 function_menu_profiles_antix "$ffmpeg_profile_file_audio" Audio
fi
}


function_load_profiles_device (){

if [[ ! -z "$pidofx" ]] ; then  
	ARGS="--menu \"choose your profile\" --"

	while read PROFILE OPTS; do

		ARGS="${ARGS} \"${OPTS}\" \"${PROFILE}\""
	done < $ffmpeg_profile_file_device

	ansprofile=$(echo $ARGS | xargs kdialog)

	if [[ -z "$ansprofile" ]]; then
	function_passivepopup_test  $"No profile given please select a profile"
	function_menu_start
	fi
	echo $ansprofile
	profile="$(awk '{$1 = "" ; print}'<< _EOF
$ansprofile
_EOF
)"
	echo $profile
#feed awk with a fake file :D that has ansprofile liek text
	outformat="$(awk '{print $1}'<< _EOF
$ansprofile
_EOF
)"

echo $outformat


else
	 function_menu_profiles_antix "$ffmpeg_profile_file_device" Device
fi
}


function_load_profiles_video (){

if [[ ! -z "$pidofx" ]] ; then  
	ARGS="--menu \"choose your profile\" --"

	while read PROFILE OPTS; do

		ARGS="${ARGS} \"${OPTS}\" \"${PROFILE}\""
	done < $ffmpeg_profile_file_video

	ansprofile=$(echo $ARGS | xargs kdialog)

	if [[ -z "$ansprofile" ]]; then
	function_passivepopup_test  $"No profile given please select a profile"
	function_menu_start
	fi
	echo $ansprofile
	profile=$(awk '{$1 = "" ; print}'<< _EOF
$ansprofile
_EOF
)
	echo $profile
#feed awk with a fake file :D that has ansprofile liek text
	outformat=$(awk '{print $1}'<< _EOF
$ansprofile
_EOF
)

	echo $outformat
else
	 function_menu_profiles_antix "$ffmpeg_profile_file_video" Video
fi
}


function_generate_audio_preset(){

echo "Ac3_HQ_Stereo ac3 -f ac3 -acodec ac3 -ab 384k -ar 48000 -ac 2
Ac3_MQ_Stereo ac3 -f ac3 -acodec ac3 -ab 192k -ar 48000 -ac 2
Ac3_LQ_Stereo ac3 -f ac3 -acodec ac3 -ab 64k -ar 48000 -ac 2
OGG_quality_60 OGG -aq 60 -ac 2 
OGG_HQ ogg -ab 384k -ac 2 -ar 44100
OGG_MQ ogg  -ab 160k -ac 2 -ar 44100
OGG_LQ ogg  -ab 64k -ac 2 -ar 44100
OGG_HQ_compiled_ffmpeg  ogg -vn -ab 384k -acodec libvorbis -ac 2 -ar 44100
OGG_MQ_compiled_ffmpeg  ogg -vn -ab 192k -acodec libvorbis -ac 2 -ar 44100
OGG_LQ_compiled_ffmpeg  ogg -vn -ab 64k -acodec libvorbis -ac 2 -ar 44100
MP3_HQ mp3 -acodec libmp3lame -ab 384k -ac 2 -ar 44100
MP3_MQ mp3 -acodec libmp3lame -ab 160k -ac 2 -ar 44100
MP3_LQ mp3 -acodec libmp3lame -ab 64k -ac 2 -ar 44100
MP3_(Mono) mp3 -acodec libmp3lame -ab 32k -ac 1 -ar 22050
MPEG4_Audio m4a -vn -acodec libfaac -ab 112k -ac 2
Wav_for_CD wav -vn -ar 44100
WMA wma -vn -acodec wmav2 -ab 160k" > "$ffmpeg_profile_file_audio"

}

function_generate_device_preset(){

echo "Blackberry_Video_Fullscreen mp4 -f mp4 -r 24 -vcodec libx264 -s 240x180 -aspect 4:3 -maxrate 800kb -bufsize 80k -b 400k -acodec libfaac -ar 44100 -ab 80k -ac 2
Blackberry_Music mp3 -acodec libmp3lame -ab 160k -ac 2 -ar 44100
Blackberry_Video_Widescreen mp4 -f mp4 -r 24 -vcodec libx264 -s 320x180 -aspect 16:9 -maxrate 800kb -bufsize 80k -b 400k -acodec libfaac -ar 44100 -ab 80k -ac 2
Blackberry_Curve_Fullscreen mp4 -f mp4 -vcodec mpeg4 -b 400k -r 24 -s 320x240 -aspect 4:3 -acodec libfaac -ar 22050 -ac 2 -ab 48k
Blackberry_Curve_Widescreen mp4 -f mp4 -vcodec mpeg4 -b 400k -r 24 -s 320x180 -aspect 16:9 -acodec libfaac -ar 22050 -ac 2 -ab 48k
CDMA_Phone_Audio_(3g2) 3g2 -f 3g2 -ar 22050 -ab 128k -acodec libfaac -s qcif -r 14.985 -vn
iPod_Small_Converted_to_WideScreen m4v -r 29.97 -croptop 64 -cropbottom 64 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 320x176 -aspect 16:9 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_TV_Out_Fullscreen m4v -r 29.97 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 512x384 -aspect 4:3 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_TV_Out_Widescreen m4v -r 29.97 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 624x352 -aspect 16:9 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_TV_Out_Widescreen_Anamorphic m4v -r 29.97 -croptop 60 -cropbottom 60 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 640x272 -aspect 2.35 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_TV_Out_Converted_to_Widescreen m4v -r 29.97 -croptop 64 -cropbottom 64 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 640x352 -aspect 16:9 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_Small_Fullscreen m4v -r 29.97 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 320x240 -aspect 4:3 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_Small_WideScreen m4v -r 29.97 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 320x176 -aspect 16:9 -acodec libfaac -ab 112k -ar 48000 -ac 2
iPod_Small_WideScreen_Anamorphic m4v -r 29.97 -croptop 60 -cropbottom 60 -vcodec libx264 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -crf 21 -bt 256k -refs 1 -coder 0 -me_method full -me_range 16 -subq 5 -partitions +parti4x4+parti8x8+partp8x8 -g 250 -keyint_min 25 -level 30 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -s 320x144 -aspect 2.35 -acodec libfaac -ab 112k -ar 48000 -ac 2
LG_Chocolate mp4 -f mp4 -s 240x192 -r 11.988 -b 192k -ab 56k -vcodec libxvid -acodec libfaac
Neuros_HQ_PAL_Widescreen mp4 -f mp4 -r 25 -vcodec libxvid -s 704x384 -aspect 16:9 -maxrate 3000kb -b 2500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -bf 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 48000 -ab 128k -ac 2
Neuros_HQ_NTSC_Widescreen mp4 -f mp4 -r 29.97 -vcodec libxvid -s 704x384 -aspect 16:9 -maxrate 3000kb -b 2500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -bf 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 48000 -ab 128k -ac 2
Neuros_Small_File_NTSC_Widescreen mp4 -f mp4 -b 800k -r 29.97 -s 352x240 -aspect 16:9 -vcodec libxvid -ar 48000 -ab 80k -ac 2 -acodec libfaac
Neuros_Small_File_PAL_Widescreen mp4 -f mp4 -b 800k -r 25 -s 352x240 -aspect 16:9 -vcodec libxvid -ar 48000 -ab 80k -ac 2 -acodec libfaac
Neuros_HQ_NTSC_Fullscreen mp4 -f mp4 -r 29.97 -vcodec libxvid -s 640x480 -aspect 4:3 -maxrate 2500kb -b 2000k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 48000 -ab 128k -ac 2
Neuros_HQ_PAL_Fullscreen mp4 -f mp4 -r 25 -vcodec libxvid -s 640x480 -aspect 4:3 -maxrate 2500kb -b 2000k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 48000 -ab 128k -ac 2
Neuros_Small_File_NTSC_Fullscreen mp4 -f mp4 -b 800k -r 29.97 -s 320x240 -aspect 4:3 -vcodec libxvid -ar 48000 -ab 80k -ac 2 -acodec libfaac
Neuros_Small_File_PAL_Fullscreen mp4 -f mp4 -b 800k -r 25 -s 320x240 -aspect 4:3 -vcodec libxvid -ar 48000 -ab 80k -ac 2 -acodec libfaac
Palm_Fullscreen mp4 -f mp4 -r 29.97 -vcodec libxvid -s 428x320 -aspect 4:3 -maxrate 550kb -b 500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 44100 -ab 80k -ac 2
Palm_Widescreen mp4 -f mp4 -r 29.97 -vcodec libxvid -s 480x320 -aspect 3:2 -maxrate 450kb -b 430k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libfaac -ar 44100 -ab 80k -ac 2
RB_Apple_iPod_Video_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 320x240 -b 400k -strict -1
RB_Apple_iPod_Video_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 320x176 -b 400k -strict -1
RB_Apple_iPod_Photo/Color_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 224x176 -b 320k -r 15 -strict -1
RB_Apple_iPod_Photo/Color_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 224x128 -b 320k -r 24 -strict -1
RB_Apple_iPod_Nano_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 176x128 -b 256k -strict -1
RB_Apple_iPod_Nano_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 176x128 -b 256k -strict -1
RB_Cowon_iAudio_X5_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 160x128 -b 176k -r 15 -strict -1
RB_Cowon_iAudio_X5_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 160x96 -b 224k -r 24 -strict -1
RB_iRiver_H10_20GB_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 160x128 -b 224k -strict -1
RB_iRiver_H10_20GB_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 160x96 -b 224k -strict -1
RB_iRiver_H10_5/6GB_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 128x96 -b 224k -strict -1
RB_iRiver_H10_5/6GB_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 128x80 -b 224k -strict -1
RB_iRiver_H300_Fullscreen mpg -acodec libmp3lame -ab 96k -ar 44100 -vcodec mpeg2video -s 224x176 -b 224k -r 10 -strict -1
RB_iRiver_H300_Widescreen mpg -acodec libmp3lame -ab 96k -ar 44100 -vcodec mpeg2video -s 224x128 -b 256k -r 15 -strict -1
RB_Sandisk_Sansa_e200_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 224x176 -b 320k -strict -1
RB_Sandisk_Sansa_e200_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 224x128 -b 320k -strict -1
RB_Toshiba_Gigabeat_F/X_Fullscreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 320x240 -b 600k -strict -1
RB_Toshiba_Gigabeat_F/X_Widescreen mpg -acodec libmp3lame -ab 128k -ar 44100 -vcodec mpeg2video -s 320x176 -b 600k -strict -1
PS3_720p_Widescreen mp4 -f mp4 -r 23.976 -vcodec libx264 -s 1280x720 -b 3000k -aspect 16:9 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0  -maxrate 3500k -bufsize 4M -bt 256k -refs 1 -bf 3 -coder 1 -me_method umh -me_range 16 -subq 7 -partitions +parti4x4+parti8x8+partp8x8+partb8x8 -g 250 -keyint_min 25 -level 30 -qmin 10 -qmax 51 -qcomp 0.6 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -acodec libfaac -ab 384k -ar 48000 -ac 2
PS3_720p_Fullscreen mp4 -f mp4 -r 23.976 -vcodec libx264 -s 1280x720 -b 3000k -aspect 4:3 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0  -maxrate 3500k -bufsize 4M -bt 256k -refs 1 -bf 3 -coder 1 -me_method umh -me_range 16 -subq 7 -partitions +parti4x4+parti8x8+partp8x8+partb8x8 -g 250 -keyint_min 25 -level 30 -qmin 10 -qmax 51 -qcomp 0.6 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -acodec libfaac -ab 384k -ar 48000 -ac 2
PSP_Widescreen mp4 -f mp4 -r 29.97 -vcodec libx264 -s 480x272 -aspect 16:9 -b 1250k -maxrate 4M -bufsize 4M -flags +loop -cmp +chroma -partitions +parti4x4+partp8x8+partb8x8 -me_method umh -subq 6 -trellis 1 -refs 2 -bf 1 -coder 1 -me_range 16 -g 300 -keyint_min 25 -sc_threshold 40 -i_qfactor 0.71 -bt 1250k -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -level 21 -acodec libfaac -ab 128k -ar 48000 -ac 2
PSP_Fullscreen mp4 -f mp4 -r 29.97 -vcodec libx264 -s 640x480 -aspect 4:3 -b 1250k -maxrate 4M -bufsize 4M -flags +loop -cmp +chroma -partitions +parti4x4+partp8x8+partb8x8 -me_method umh -subq 6 -trellis 1 -refs 2 -bf 1 -coder 1 -me_range 16 -g 300 -keyint_min 25 -sc_threshold 40 -i_qfactor 0.71 -bt 1250k -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -level 21 -acodec libfaac -ab 128k -ar 48000 -ac 2
MS_Compatible_AVI avi -acodec libmp3lame -vcodec msmpeg4 -ab 192k -b 1000k -s 640x480 -ar 44100
Power_Point wmv -vcodec wmv2  -acodec wmav2 -aspect 4:3 -b 500k -ab 32k -ac 1 -ar 22050 -s 320x240
Xbox_360 wmv -vcodec wmv2  -acodec wmav2 -b 1200k -ab 160k -r 25 -s 720x480
Zune wmv -vcodec wmv2  -acodec wmav2 -b 640k -ab 128k -r 23.97 -s 320x240
Zen_Fullscreen avi -f avi -r 29.97 -vcodec libxvid -vtag XVID -s 320x240 -aspect 4:3 -maxrate 1800kb -b 1500k  -acodec libmp3lame -ar 48000 -ab 128k -ac 2
Zen_Widescreen avi -f avi -r 29.97 -vcodec libxvid -vtag XVID -s 320x240 -aspect 16:9 -maxrate 1800kb -b 1500k  -acodec libmp3lame -ar 48000 -ab 128k -ac 2 "> "$ffmpeg_profile_file_device"
}



function_generate_video_preset(){

echo "PAL_DVD_Fullscreen mpg -f dvd -vcodec mpeg2video -r 25.00 -s 352x576  -aspect 4:3 -b 4000k -mbd rd -trellis -mv0 -cmp 2 -subcmp 2 -acodec mp2 -ab 192k -ar 48000 -ac 2
PAL_DVD_Widescreen mpg -f dvd -vcodec mpeg2video -r 25.00 -s 352x576 -aspect 16:9 -b 4000k -mbd rd -trellis -mv0 -cmp 2 -subcmp 2 -acodec mp2 -ab 192k -ar 48000 -ac 2
PAL_DVD_Fast_(LQ) mpg -f dvd -target pal-dvd -b 5000k -r 25 -s 720x576 -ar 48000 -ab 384k
PAL_VCD_(HQ) mpg -f vcd -target pal-vcd -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
PAL_DVD_HQ_Fullscreen mpg -f dvd -target pal-dvd -aspect 4:3 -b 8000k -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
PAL_DVD_HQ_Widescreen mpg -f dvd -target pal-dvd -aspect 16:9 -b 8000k -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
NTSC_DVD_Fullscreen mpg -f dvd -vcodec mpeg2video -r 29.97 -s 352x480 -aspect 4:3 -b 4000k -mbd rd -trellis -mv0 -cmp 2 -subcmp 2 -acodec mp2 -ab 192k -ar 48000 -ac 2
NTSC_DVD_Widescreen mpg -f dvd -vcodec mpeg2video -r 29.97 -s 352x480 -aspect 16:9 -b 4000k -mbd rd -trellis -mv0 -cmp 2 -subcmp 2 -acodec mp2 -ab 192k -ar 48000 -ac 2
NTSC_DVD_Fast_(LQ) mpg -f dvd -target ntsc-dvd -b 5000k -r 29.97 -s 720x480 -ar 48000 -ab 384k
NTSC_VCD_(HQ) mpg -f vcd -target ntsc-vcd -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
NTSC_DVD_HQ_Widescreen mpg -f dvd -target ntsc-dvd -r 29.97 -s 720x480 -aspect 16:9 -b 8000k -g 12 -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
NTSC_DVD_HQ_Fullscreen mpg -f dvd -target ntsc-dvd -r 29.97 -s 720x480 -aspect 4:3 -b 8000k -mbd rd -trellis -mv0 -cmp 0 -subcmp 2
DV_for_NTSC_Fullscreen dv -target ntsc-dv -aspect 4:3 -f dv
DV_for_PAL_Fullscreen dv -target pal-dv -aspect 4:3 -f dv
Flash_Video_(flv)_for_Web_use_Fullscreen flv -vcodec flv -f flv -r 29.97 -s 320x240 -aspect 4:3 -b 300k -g 160 -cmp dct  -subcmp dct  -mbd 2 -flags +aic+cbp+mv0+mv4+trell -trellis 1 -ac 1 -ar 22050 -ab 56k
Flash:_Video_(flv)_for_Web_use_Widescreen flv -vcodec flv -f flv -r 29.97 -s 320x180 -aspect 16:9 -b 300k -g 160 -cmp dct -subcmp dct -mbd 2 -flags +aic+cbp+mv0+mv4+trell -trellis 1 -ac 1 -ar 22050 -ab 56k
MP4_Fullscreen mp4 -f mp4 -r 29.97 -vcodec libx264 -s 640x480 -b 1000k -aspect 4:3 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -b 1250k -maxrate 1500k -bufsize 4M -bt 256k -refs 1 -bf 3 -coder 1 -me_method umh -me_range 16 -subq 7 -partitions +parti4x4+parti8x8+partp8x8+partb8x8 -g 250 -keyint_min 25 -level 30 -qmin 10 -qmax 51 -qcomp 0.6 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -acodec libfaac -ab 112k -ar 48000 -ac 2
MP4_Widescreen mp4 -f mp4 -r 29.97 -vcodec libx264 -s 704x384 -b 1000k -aspect 16:9 -flags +loop -cmp +chroma -deblockalpha 0 -deblockbeta 0 -b 1250k -maxrate 1500k -bufsize 4M -bt 256k -refs 1 -bf 3 -coder 1 -me_method umh -me_range 16 -subq 7 -partitions +parti4x4+parti8x8+partp8x8+partb8x8 -g 250 -keyint_min 25 -level 30 -qmin 10 -qmax 51 -qcomp 0.6 -trellis 2 -sc_threshold 40 -i_qfactor 0.71 -acodec libfaac -ab 112k -ar 48000 -ac 2
MOV_Quicktime mov -f mov -acodec libfaac -b 1250k -r 25 -ab 128k -ac 2 -s 640x480
XviD_Widescreen avi -f avi -r 29.97 -vcodec libxvid -vtag XVID -s 704x384 -aspect 16:9 -maxrate 1800k -b 1500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -bf 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libmp3lame -ar 48000 -ab 128k -ac 2
XviD_Widescreen_Anamorphic avi -f avi -r 29.97 -croptop 58 -cropbottom 62 -vcodec libxvid -vtag XVID -s 640x272 -aspect 2.35 -maxrate 1800kb -b 1500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -bf 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libmp3lame -ar 48000 -ab 128k -ac 2
XviD_FullScreen avi -f avi -r 29.97 -vcodec libxvid -vtag XVID -s 640x480 -aspect 4:3 -maxrate 1800kb -b 1500k -qmin 3 -qmax 5 -bufsize 4096 -mbd 2 -bf 2 -flags +4mv -trellis -aic -cmp 2 -subcmp 2 -g 300 -acodec libmp3lame -ar 48000 -ab 128k -ac 2
WMV2_Generic wmv -vcodec wmv2  -acodec wmav2 -b 1000k -ab 160k -r 25
WMV_for_Web_Use wmv -vcodec wmv2  -acodec wmav2 -b 640k -ab 128k -r 29.97 -s 320x240"> "$ffmpeg_profile_file_video"
}




function_check (){



if [[ -z "$probe" ]] ; then 
probe=$(type -p avprobe)
fi

if [[ -z "$probe" ]] ; then 
function_message_error $"Unable to detect ffprobe or avprobe"
exit 1
fi

if [[ ! -e "$listoffile" ]] ; then
function_message_error $"i can't find the conversion list $HOME/ffmpeg-service-menu-qt.lst , Please add some files to your list"
ansmainmenu=""
function_menu_start

elif [[ ! -s "$listoffile" ]]; then
kdialog --error $"Check your list is empty! add some file to your list file ~/ffmpeg-service-menu-qt.lst"
ansmainmenu=""
function_menu_start
fi


if [[ -z "$numberoffile" ]] ; then
numberoffile=$(wc -l <"$listoffile")
fi
 


if [[ ! -e "$ffmpeg_profile_file_audio" ]] ; then
 function_passivepopup_test $"i can't find the ffmpeg profile files.. autogenerating $ffmpeg_profile_file"
 
function_generate_audio_preset
fi

if [[ ! -e "$ffmpeg_profile_file_device" ]] ; then
 function_passivepopup_test $"i can't find the ffmpeg profile files.. autogenerating $ffmpeg_profile_file"
 
function_generate_device_preset
fi


if [[ ! -e "$ffmpeg_profile_file_video" ]] ; then
 function_passivepopup_test $"i can't find the ffmpeg profile files.. autogenerating $ffmpeg_profile_file"
 
function_generate_video_preset
fi

}


function_add_filter (){

function_message $"This has to become"

}


 function_menu_advanced (){
 # a $"Convert Advanced User" pd $"Convert Using a  Profile Dual Pass X2 slower"
if [[ -z "$pidofx" ]] ; then 
clear
function_menu_advanced_second_antix
else 
function_menu_advanced_second
fi 
 
function_ansmenu
 
 }
 

function_menu_advanced_second (){

 
ansadvanced=$(kdialog --title $"Advanced Menu FFmpeg Dolphin Service Menu" --menu  $"Choose an option" decompile $"Decompile Video" compile $"Compile a Video" build $"Build Your Own Function"    cf $"Compile FFmpeg (for debian\kubuntu)" s $"Screencast" v "Version Author Copyright" back $"Back")
function_ansmenu_advanced
#addsubtitle $"Add Subtitle"
#resize $"Resize Video" addfilter $"Add A Filter"
}

function_menu_advanced_second_antix (){
tput cup 3 14
tput setaf 2


echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

tput cup 5 17 
tput rev 
echo $"Advanced Menu FFmpeg Dolphin Service Menu"
tput sgr0



menutextadvanced[0]=$" Decompile"
menutextadvanced[1]=$" Compile"
menutextadvanced[2]=$" Build Your Own Function"
menutextadvanced[3]=$" Add Subtitle"
menutextadvanced[4]=$" Resize Video"
menutextadvanced[5]=$" Add A Filter"
menutextadvanced[6]=$" Compile FFmpeg (for debian\kubuntu)"
menutextadvanced[7]=$" ScreenCast"
menutextadvanced[8]=$" Version Author Copyright"
menutextadvanced[9]=$" Back to Main Menu"
 

 

menulabeladvanced[0]=$"decompile"
menulabeladvanced[1]=$"compile"
menulabeladvanced[2]=$"build"
menulabeladvanced[3]=$"addsubtitle"
menulabeladvanced[4]=$"resize"
menulabeladvanced[5]=$"addfilter"
menulabeladvanced[6]=$"cf"
menulabeladvanced[7]=$"s"
menulabeladvanced[8]=$"v"
menulabeladvanced[9]=$"back" 

a=0
b=7
echo 
for menut in "${menutextadvanced[@]}" ; do 
c=$(($b+$a))

tput cup $c 16
echo "$(($a+1)). ${menutextadvanced[$a]}"
a=$(($a+1))
 
done




tput bold
tput cup $(($c+2)) 16
read -p $"Enter Your Choice (1-"$a")" choice

echo $message
message=""
tput sgr0 
# if ! [[ "$choice" != *[!0-9]* ]] ;then 
# function_menu_start
# fi 
ansadvanced="${menulabeladvanced[$(($choice-1))]}"
echo $ansadvanced

function_ansmenu_advanced
}

function_record_screen_menu () {

screencast=""
tput cup 3 14
tput setaf 2


echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

tput cup 5 17 
tput rev 
echo $"Screencast Menu FFmpeg Dolphin Service Menu"
tput sgr0



menutextadvancedscreencast[0]=$" Fast Cpu Fullscreen"
menutextadvancedscreencast[1]=$" Slow Cpu Fullscreen"
menutextadvancedscreencast[2]=$" Fast Cpu Detect Window"
menutextadvancedscreencast[3]=$" Slow Cpu Detect Window"
menutextadvancedscreencast[4]=$" Back to Advanced Menu"
  
 
 

menulabeladvancedscreencast[0]=$"fullscreen_fast"
menulabeladvancedscreencast[1]=$"fullscreen_compress"
menulabeladvancedscreencast[2]=$"detectwindow_fast"
menulabeladvancedscreencast[3]=$"detectwindow_compress"
menulabeladvancedscreencast[4]=$"back" 

a=0
b=7
echo 
for menut in "${menutextadvancedscreencast[@]}" ; do 
c=$(($b+$a))

tput cup $c 16
echo "$(($a+1)). ${menutextadvancedscreencast[$a]}"
a=$(($a+1))
 
done




tput bold
tput cup $(($c+2)) 16
read -p $"Enter Your Choice (1-"$a")" choice


tput sgr0 
# if ! [[ "$choice" != *[!0-9]* ]] ;then 
# function_menu_start
# fi 
screencast="${menulabeladvancedscreencast[$(($choice-1))]}"
echo $screencast
function_record_screen "$screencast"

# function_ansmenu_advanced
 
}

function_ansmenu_advanced(){

case "$ansadvanced" in
 
compile)
function_compile_check
;;

decompile)
function_decompile
;;

resize)
#function_resize
function_message $"This has to come"
function_menu_start
;;
build)

function_build #function_menu_advanced
 ;;

addsubtitle)
#function_add_subtitle
function_message $"This has to come"
function_menu_start
 ;;
addfilter)
function_message $"This has to come"
function_menu_start
#function_add_filter
 ;;
 cf)
 konsole --noclose -e ffmpeg-peace-service-menu -cf
 ;;
 s)
 clear
 function_record_screen_menu
 ;;
 help)
 function_help x
 ;;
 
 v)
kdialog --title "$title" --msgbox "$Version $Author $License"
function_menu_start
 ;;
 back)
 function_menu_start
 ;;
 *)
kdialog --title "$title" --yesno $"You have not choose an option do you want exit?"
	if [[ $? == 1 ]] ; then
		function_menu_start
	else
		exit
	fi
 ;;
 esac
 

}




function_add_subtitle(){

case $1 in
acopy)
subtitleprofile="-acodec copy "
;;
vacopy)
subtitleprofile="-acodec copy -vcodec copy"
;;
encode)
subtitleprofile=""
;;
*)
subtitleprofile=""
;;
esac

function_check

a=1
mystufvariabletouseonmyscript=$(kdialog --title $"FFmpeg Dolphin Service Menu"  --progressbar $"Starting Conversion..." 100)

qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true

qdbus $mystufvariabletouseonmyscript  showCancelButton true

until test "true" = `qdbus  $mystufvariabletouseonmyscript wasCancelled` ; do
	outformat=$(kdialog --combobox $"Convert to..keeping the same quality" $commonaudioformats $commonvideoformats --default $defaultformat)
	while  read <&3 line ; do
		qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line"
		echo "Log File $line
		
		">> "$templog"
		echo "$ffmpegpath -i   "$line"  "-i $subtitleprofile" "$overwrite" "${line%%.*}.$outformat"
		
		" >> "$templog"
		$ffmpegpath -i   "$line" -newsubtitle ${line%%.*}.srt  $subtitleprofile   $overwrite "${line%%.*}.$outformat"  2>>"$templog"
		echo "
		
		">> "$templog"


		value=$(( $(($a*100))/$numberoffile ))
		qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
		a=$(($a+1))
		done 3< "$listoffile"
	if [[ "$value" == 100 ]];then
	
		if [[ "$passivepopup" == "enabled" ]];then
			 function_passivepopup_test $"Conversions done!"
		fi

	function_check_for_errors
		exit
	fi
done


}

function_compile_ffmpeg_precise (){

sudo apt-get -y build-dep ffmpeg ; sudo apt-get -y install build-essential libopencore-amrnb-dev libopencore-amrwb-dev libopenjpeg-dev libx264-dev libxvidcore-dev libx264-dev  libopenjpeg-dev   libasound2-dev   libdc1394-22-dev   libgsm1-dev  libimlib2-dev libraw1394-dev libsdl1.2-dev libschroedinger-dev libspeex-dev  libtheora-dev  libvorbis-dev libx11-dev libxext-dev libxvmc-dev quilt texi2html zlib1g-dev libfaad-dev libdirac-dev libfaac-dev libmp3lame-dev frei0r-plugins-dev libdirac-dev  libfaac-dev 
 
 if [[ -d "$HOME/ffmpeg" ]]; then  #if exist folder
cd "$HOME/ffmpeg" 
read -p $"Do you want run make clean ? y\n"
	if [[ "$REPLY" == "y" ]] ; then 
	make clean
	fi 
git pull 
else 
git clone git://source.ffmpeg.org/ffmpeg.git "$HOME/ffmpeg" ; cd  "$HOME/ffmpeg" 
fi
 
 ./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc  --enable-x11grab --enable-gray --enable-small --enable-runtime-cpudetect --enable-hardcoded-tables --enable-memalign-hack   --enable-bzlib --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb  --enable-libdc1394 --enable-libdirac --enable-libfaac --enable-libgsm  --enable-libopenjpeg  --enable-libschroedinger --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264  --enable-libxvid  --enable-zlib  --enable-pic --enable-sram --enable-libmp3lame	--enable-extra-warnings; make -j$(($threadsdetected+1))
}

function_compile_ffmpeg_quantal (){

sudo apt-get -y build-dep ffmpeg ; sudo apt-get -y install build-essential libopencore-amrnb-dev libopencore-amrwb-dev libopenjpeg-dev libx264-dev libxvidcore-dev libx264-dev  libopenjpeg-dev   libasound2-dev   libdc1394-22-dev   libgsm1-dev  libimlib2-dev libraw1394-dev libsdl1.2-dev libschroedinger-dev libspeex-dev  libtheora-dev  libvorbis-dev libx11-dev libxext-dev libxvmc-dev quilt texi2html zlib1g-dev libfaad-dev libdirac-dev libfaac-dev libmp3lame-dev frei0r-plugins-dev libdirac-dev  libfaac-dev ;sudo apt-get install libass-dev libbluray-dev libfontconfig1-dev libcelt-dev libmodplug-dev libopencv-dev librtmp-dev libv4l-dev libvo-aacenc-dev libvo-amrwbenc-dev libssl-dev 

if [[ -d "$HOME/ffmpeg" ]]; then  #if exist folder
cd "$HOME/ffmpeg"
read -p $"Do you want run make clean ? y\n"
	if [[ "$REPLY" == "y" ]] ; then 
	make clean
	fi 
git pull 
else 
git clone git://source.ffmpeg.org/ffmpeg.git "$HOME/ffmpeg" ; cd  "$HOME/ffmpeg" 
fi 
./configure --enable-gpl --enable-version3 --enable-nonfree  --enable-gray --enable-avresample --enable-x11grab --enable-vaapi --enable-vda --enable-vdpau  --enable-bzlib --enable-frei0r --enable-gnutls --enable-libass --enable-libbluray  --enable-libcdio --enable-libdc1394 --enable-libfaac --enable-libfreetype --enable-libgsm  --enable-libmodplug --enable-libmp3lame  --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopencv --enable-libopenjpeg --enable-libpulse --enable-librtmp --enable-libschroedinger --enable-libspeex  --enable-libtheora --enable-libv4l2 --enable-libvo-aacenc --enable-libvo-amrwbenc  --enable-libvorbis --enable-libvpx --enable-libx264  --enable-libxvid  --enable-openssl --enable-zlib --enable-pic --enable-sram --enable-hardcoded-tables --enable-memalign-hack --enable-coverage   --enable-extra-warnings --enable-random --enable-fontconfig;make -j$(($threadsdetected+1))
}

function_compile_ffmpeg_fromgit(){
threadsdetected=$(awk '/processor/{print}' /proc/cpuinfo | wc -l)
# program[0]=make
program[1]=git
program[2]=awk
program[3]=lsb_release
	





for program in "${program[@]}";do 

	if [[ -z $(type -p "$program") ]];then 
		if [[ -z "$pidofx" ]] ; then
			echo "$program not found; PLEASE INSTALL IT" >&2
			echo "error exiting..." >&2
			exit 1;
		else
			kdialog --msgbox $"$program not found; PLEASE INSTALL IT" >&2
			echo "error exiting..." >&2
			exit 1;
		fi
	fi
done

release=$(lsb_release -c | awk '{print $2}')
if [[ -z "$release" ]];then
function_message_error $"Unable to detect your distro release note this function is tested only on kubuntu 12.10"
fi

releases[1]="precise"
releases[2]="quantal"
releases[3]="sid"
releases[4]="testing"
releases[5]="stable"

for r in "${releases[@]}" ; do 

	if [[ "$r" == $release ]] ; then
		function_compile_ffmpeg_$release
	fi



done

# if [[  "$release" == 12.04 ]] ;then
# function_compile_ffmpeg_1204
# elif [[ "$release" == 12.10 ]] ;then
# function_compile_ffmpeg_1210
# else 
# function_message_error $"Sorry i can't compile ffmpeg for you because this function is enabled only for kubuntu 12.10 and 12.04"
# fi 
 
 
 
}

function_imagemagick_convert(){
if [[ -d /tmp/temp_ffmpeg_service_menu_folder/ ]] ; then
echo $"/tmp/temp_ffmpeg_service_menu_folder/ exist"
else
mkdir "/tmp/temp_ffmpeg_service_menu_folder/"

fi 

if [[ -d /tmp/temp_ffmpeg_service_menu_folder/temp_converted_folder ]] ; then
echo $"folder /tmp/temp_ffmpeg_service_menu_folder/temp_converted_folder exist"
else 
	mkdir /tmp/temp_ffmpeg_service_menu_folder/temp_converted_folder
fi
	
while  read  line ; do
counter=$(printf %09d $x)

# 
# name="${line##*/}" # remove the folders /asdfa/myfile.ogg.txt.like----->/myfile.ogg.txt.like
# name="${name%%.*}" # remove extensions like .ogg .ogv .txt
# outfolder="${line%%.*}" # remove extensions like .ogg .ogv .txt
convert "$line" /tmp/temp_ffmpeg_service_menu_folder/temp_converted_folder/"img$counter".jpg
echo "/tmp/temp_ffmpeg_service_menu_folder/temp_converted_folder/"img$counter".jpg" >>/tmp/ffmpeg_service_menu_temp_listoffile.lst
x=$(($x+1))
done  < "$listoffile"

}

function_compile_check(){

function_check

name_compiledvideo=$(kdialog --title $"insert the video name" --getopenfilename $HOME "$filtercommonvideoformats|Video Files"  )
outformat=$(kdialog --title $"which format do you want use" --combobox $"Which format do you want use to build your video?" $commonvideoformats )
audiotrack=$( kdialog --title $"Audio track leave empty if you don't want it" --getopenfilename $HOME)


program[0]=convert

for program in "${program[@]}";do 

	if [[ ! $(type -p "$program" ) ]];then 
		if [[ -z "$pidofx" ]] ; then
			echo "$program not found; PLEASE INSTALL IT" >&2
			echo "error exiting..." >&2
			exit 1;
		else
			function_message_error $"$program not found; PLEASE INSTALL IT" >&2
			function_menu_start
		fi
	fi
done

 
z=1
while  read  line ; do

	if [[ $z == 1 ]] ;then 
		extension=${line##*.}
		if [[ -z "$extension" ]] ; then 
		function_message_error $"unable to get the extension of your files error\bug?"
		function_menu_start
		fi 

	fi 
	testextension=${line##*.}
		if [[ "$testextension" == "$extension" ]] ; then
		echo "it seems all ok..."
		else
		echo  $"multiple formats in your picture i need to convert them before in png"
		function_imagemagick_convert
		fi 
	z=$(($z+1))
	
	

done  < "$listoffile"

 
function_compile_video

}

function_wget_profile(){

wget "$1" -O "$2"
}

function_compile_video(){

if  [[ -e "/tmp/ffmpeg_service_menu_temp_listoffile.lst" ]] ;then
listoffile="/tmp/ffmpeg_service_menu_temp_listoffile.lst"
fi 

if [[ ! -d "/tmp/temp_ffmpeg_service_menu_folder" ]];then 
mkdir "/tmp/temp_ffmpeg_service_menu_folder"
fi 


if [[ -z "$name_compiledvideo" ]];then
function_message_error $"No name give back to main menu..."
function_menu_start
fi 

if [[ -z "$audiotrack" ]] ;then
	x=1
		while  read  line ; do
		counter=$(printf %09d $x)
		ln -s "$line" /tmp/temp_ffmpeg_service_menu_folder/img"$counter".jpg
		x=$(($x+1))
		done  < "$listoffile"

		echo "$ffmpegpath -f image2 -i /tmp/temp_ffmpeg_service_menu_folder/img%09d.jpg /tmp/"$name_compiledvideo.$outformat"" 
	$ffmpegpath -f image2 -i /tmp/temp_ffmpeg_service_menu_folder/img%09d.jpg "$name_compiledvideo.$outformat"   >>"$templog"
else
	echo "$ffmpegpath -f image2 -i /tmp/temp_ffmpeg_service_menu_folder/img%09d.jpg -newaudio "$audiotrack" /tmp/"$name_compiledvideo.$outformat""
	$ffmpegpath -f image2 -i /tmp/temp_ffmpeg_service_menu_folder/img%09d.jpg -newaudio "$audiotrack" "$name_compiledvideo.$outformat"  >>"$templog"
fi

if [[ -e "$name_compiledvideo.$outformat" && ! -s "$name_compiledvideo.$outformat" ]]; then #if doens't empty and exist
function_delete
else 

function_message_error $"FFmpeg has failed to create the file $name_compiledvideo.$outformat"
askopen=2
function_open_log

# kdialog --title $"FFmpeg service menu error" --yesnocancel $"FFmpeg has failed to create the file $name_compiledvideo.$outformat do you want to check the log $templog ?"
# 	if [[ $? == 0 ]] ;then 
# 	$xtexteditor "$templog"
# 	fi 
# fi 
fi
}

function_decompile (){
askopen=""

if [[ ! -z "$pidofx" ]] ; then

 pictureformat=$(kdialog --combobox "picture format " jpg png --default jpg )

while  read <&3 line ; do
outfolder="${line%%.*}" # remove extensions like .ogg .ogv .txt

name="${line##*/}" # remove the folders /asdfa/myfile.ogg.txt.like----->/myfile.ogg.txt.like
name="${name%%.*}" # remove extensions like .ogg .ogv .txt


mkdir "$outfolder"_decompiled


$ffmpegpath -i   "$line" -sameq $overwrite "$outfolder"_decompiled/"${name%%.*}.wav" 2> "$templog"
$ffmpegpath -i  "$line"  $overwrite  "$outfolder"_decompiled/"$name"%d.$pictureformat 2>> "$templog"

 

done  3< "$listoffile"

else
	echo "image format j\p (jpeg\png)"
	read

	case $REPLY in
	jpg|j)
	imageformat=jpg
	;;

	png|p)
	imageformat=png
	;;
	esac


while  read <&3 line ; do
	outfolder="${line%%.*}" # remove extensions like .ogg .ogv .txt

	name="${line##*/}" # remove the folders /asdfa/myfile.ogg.txt.like----->/myfile.ogg.txt.like
	name="${name%%.*}" # remove extensions like .ogg .ogv .txt


	mkdir "$outfolder"_decompiled

	echo $"Processing $line
	
	$ffmpegpath -i   "$line" $overwrite -sameq "$outfolder"_decompiled/"${name%%.*}.wav"
	$ffmpegpath -i  "$line" $overwrite  "$outfolder"_decompiled/"$name"%d."$imageformat"
		
	">> "$templog"
	$ffmpegpath -i   "$line" $overwrite -sameq "$outfolder"_decompiled/"${name%%.*}.wav" 2>> "$templog"
	$ffmpegpath -i  "$line" $overwrite  "$outfolder"_decompiled/"$name"%d."$imageformat" 2>> "$templog"
	echo $"end
	
	">> "$templog"
 

	done  3< "$listoffile"

fi
}


function_analyze (){


if [[ -z "$1" ]] ; then 

function_message_error $"No input given"
else
info=$($probe "$1" 2>&1)

fi

function_info_message "info for $1 $info"

}



function_analyze_old (){
echo $2

if [[ -z "$probe" ]] ; then 

probe=$(type -p ffprobe)

	if [[ -z "$probe" ]] ; then 
		probe=$(type -p avprobe)
	fi
	
	if [[ -z "$probe" ]] ; then 
		function_message_error $"Unable to detect ffprobe or avprobe"
		exit 1
	fi
fi 

if [[ "$1" == "awk" ]];then 

info=$($probe "$2" 2>&1 |awk  '/Video:/{$4 gsub(/\,/,"");gsub(/\(Simple Profile\)/,"");gsub( /\[[^\)]*]/, "" ) ;videocodec = $4 ; pixelformat = $5 ; resolution= $6 ;videobitrate = $7; fps = $9 }
/Duration:/{$4 gsub(/\:/," ") ;realseconds= $4; seconds = int($4); minutes= $3 ;hours= $2;totalsoundtrack = (seconds+(minutes*60)+(hours*3600)); totalbitrate = $8 }
/Audio:/{$4 gsub(/\,/,"");gsub(/\(Simple Profile\)/,"");gsub( /\[[^\)]*]/, "" ); audiocodec =$4; freq= $5 ; channel =$7 ; abitrate= $9} END {print "Video Codec: " videocodec ;print "Audio Codec: " audiocodec;print "Video Bitrate: " videobitrate ; print "Audio Bitrate: " abitrate;print "Total Bitrate: " totalbitrate ;print "Resolution: " resolution ; print "Fps: " fps ;   print "Frequency: " freq ; print "Channel: " channel;print "Pixel Format: " pixelformat ;print "Total Duration: " hours ":" minutes ":" realseconds ;print "Total seconds " totalsoundtrack } ')
else 
info=$($probe "$2" 2>&1)

fi

if [[ "$3" == "detectbitrate" ]] ; then
exvideobitrate="$($probe "$2" 2>&1| awk '/Duration:/ { print ( $(NF-1) ) }')k"
exvideobitrate="$($probe "$2" 2>&1| awk '/Stream #0.1/ { print ( $(NF-1) ) }')k"
	if [[ -z "$exvideobitrate" || -z "$exvideobitrate" ]]; then
	function_message_error $"Unable to detect the old bitrate mailme to $Author this : "$info" UNABLE TO DETECT BITRATE"
	fi 
fi 


# exvideobitrate=$(mplayer -identify $1  -ao null -vo null -frames 0 2>/dev/null | awk -F'=' '/VIDEO_BITRATE/{print $2}')
# 
# exaudioobitrate=$(mplayer -identify $1  -ao null -vo null -frames 0 2>/dev/null | awk -F'=' '/AUDIO_BITRATE/{print $2}')

# if [[ -z "$info" ]];then 
# function_message_error $"No info for files ..bug?"
# else 
# function_info_message  "$info"
# fi
#   
# function_menu_start

}


function_commonformats_antix (){
# set -x
a=0 
b=7


tput cup 3 16
tput setaf 2


echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

tput cup 5 16
tput rev 
echo $"Choose A Format you want use"
tput sgr0

i=0
for common in $1 $2 ; do 
formats[i]="$common"
i=$(($i+1))
done

for common in "${formats[@]}" ; do 
c=$(($b+$a))
tput cup $c 16
echo "$(($a+1)). $common"
a=$(($a+1))
 
done

tput cup $(($c+1)) 16
read -p "Enter Your Choice (1-$((${#formats[@]}+1)))" choice
outformat="${formats[$(($choice-1))]}"
set +x

}

function_ffmpeg_easy (){
 
 
function_check
profile="$easyprofile"
if [[ ! -z  "$pidofx" ]] ; then  
	
	outformat=$(kdialog --combobox $"Convert to..keeping the same quality" $commonaudioformats $commonvideoformats --default "$defaultformat" )


else
	tput clear
	function_commonformats_antix "$commonaudioformats" "$commonvideoformats"
fi 

if [[ -z "$outformat" ]] ; then

function_menu_start

fi

if [[ -z "$numberofpass" ]]; then 
function_ffmpeg_single_pass
elif [[ $numberofpass == 1 ]]; then
function_ffmpeg_single_pass
elif [[ $numberofpass == 2 ]];then
function_ffmpeg_double_pass
else 
function_ffmpeg_single_pass
fi 

}



function_build(){


whichprofile=$(kdialog --combobox $"Which cathegory do you want?"  audio device video  --default video )

newnameprofile=$(kdialog --title "$title" --inputbox $"Name of your profile, don't use special characters " $"new_profile_name")

if [[ "$whichprofile" == audio ]] ; then 
format=$(kdialog --combobox $"choose your format"  $commonaudioformats  )
elif [[ "$whichprofile" == device ]] ; then 
format=$(kdialog --combobox $"choose your format"  $commonaudioformats $commonvideoformats  )
elif [[ "$whichprofile" == video ]] ; then 
format=$(kdialog --combobox $"choose your format"  $commonvideoformats  )
fi 


if [[ "$whichprofile" == device || "$whichprofile" == video ]] ; then 
vbitrate=$(kdialog --combobox $"Video Bit Rate" 100k 200k 500k 1000k 2000k 3000k 4000k 5000k  --default 1000k )
fi 


if [[ "$whichprofile" == device || "$whichprofile" == video  ]] ; then 
videoc=$(kdialog --combobox $"Choose a Codec Video" 4xm  8bps  FRWU  a64multi  a64multi5  aasc  amv  anm  ansi  asv1  asv2  aura  aura2  avs  bethsoftvid  bfi  binkvideo  bmp  c93  camstudio  camtasia  cavs  cdgraphics  cinepak  cljr  cyuv  dfa  dnxhd  dpx  dsicinvideo  dvvideo  dxa  eacmv  eamad  eatgq  eatgv  eatqi  escape124  ffv1  ffvhuff  flashsv  flic  flv  fraps  gif  h261  h263  h263i  h263p  h264  h264_vdpau  huffyuv  idcinvideo  iff_byterun1  iff_ilbm  indeo2  indeo3  indeo5  interplayvideo  jpegls  jv  kgv1  kmvc  lagarith  libdirac  libopenjpeg  libschroedinger  libtheora  libvpx  libx264  libxvid  ljpeg  loco  mdec  mimic  mjpeg  mjpegb  mmvideo  motionpixels  mpeg1video  mpeg1video_vdpau  mpeg2video  mpeg4  mpeg4_vdpau  mpegvideo  mpegvideo_vdpau  mpegvideo_xvmc  msmpeg4  msmpeg4v1  msmpeg4v2  msrle  msvideo1  mszh  mxpeg  nuv  pam  pbm  pcx  pgm  pgmyuv  pgssub  pictor  png  ppm  ptx  qdraw  qpeg  qtrle  r10k  r210  rawvideo  rl2  roqvideo  rpza  rv10  rv20  rv30  rv40  sgi  smackvid  smc  
snow  sp5x  srt  sunrast  svq1  svq3  targa  theora  thp  tiertexseqvideo  tiff  tmv  truemotion1  truemotion2  txd  ultimotion  v210  v210x  vb  vc1  vc1_vdpau  vcr1  vmdvideo  vmnc  vp3  vp5  vp6  vp6a  vp6f  vp8  vqavideo  wmv1  wmv2  wmv3  wmv3_vdpau  wnv1  xan_wc3  xan_wc4  xl  yop  zlib  zmbv)
framerate=$(kdialog --combobox $"Choose Your Prefered Frame for seconds Value for mencoder:" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 29 21 22 23 24 25 27 28 29 30000/1001 30 60 120 --default 25  --title $"Frame for seconds Value")
kdialog --combobox $" Video L Size Fullscreen($defaulresolutionL) :"  2048 1920 1280 1080 1024 800 720 640 576 480 320 240 272 --default  $defaulresolutionL  --title $"Prefered Video resolution"

kdialog --combobox $"Video H Size Fullscreen($defaulresolutionH) :"  2048 1920 1280 1080 1024 800 720 640 576 480 320  240 272   --default  $defaulresolutionH  --title $"Prefered Video"

fi 



abitrate=$(kdialog --combobox   $"Audio Bit Rate" 32k 64k 128k 256k 320k  --default 128k)
samplerate=$(kdialog --combobox $"Sample Rate Hz" 11025 22050 44100 48000  --default 44100 )
acodec=$(kdialog --combobox $"Choose Audio Codec"   aac  aac_latm  ac3  ac3_fixed adpcm_4xm  adpcm_adx  adpcm_ct  adpcm_ea  adpcm_ea_maxis_xa  adpcm_ea_r1  adpcm_ea_r2  adpcm_ea_r3  adpcm_ea_xas  adpcm_ima_amv  adpcm_ima_dk3  adpcm_ima_dk4  adpcm_ima_ea_eacs  adpcm_ima_ea_sead  adpcm_ima_iss  adpcm_ima_qt  adpcm_ima_smjpeg  adpcm_ima_wav  adpcm_ima_ws  adpcm_ms  adpcm_sbpro_2  adpcm_sbpro_3  adpcm_sbpro_4  adpcm_swf  adpcm_thp  adpcm_xa  adpcm_yamaha  alac  als  amrnb  amrwb	atrac1  atrac3  binkaudio_dct  binkaudio_rdft  cook  dca  dsicinaudio  eac3  flac  g722  g726  gsm  gsm_ms  imc  interplay_dpcm  libfaac  libgsm  libgsm_ms  libmp3lame  libopencore_amrnb  libopencore_amrwb  libspeex  libvo_aacenc  libvo_amrwbenc  libvorbis  mace3  mace6  mlp  mp1  mp1float  mp2  mp2float  mp3  mp3adu  mp3adufloat  mp3float  mp3on4  mp3on4float  mpc7  mpc8  nellymoser  pcm_alaw  pcm_bluray  pcm_dvd  pcm_f32be  pcm_f32le  pcm_f64be  pcm_f64le  pcm_lxf  pcm_mulaw  pcm_s16be  pcm_s16le  pcm_s16le_ planar  pcm_s24be  pcm_s24daud  pcm_s24le  pcm_s32be  pcm_s32le  pcm_s8  pcm_u16be  pcm_u16le  pcm_u24be  pcm_u24le  pcm_u32be  pcm_u32le  pcm_u8  pcm_zork  pgssub  qcelp  qdm2  real_144  real_288  roq_dpcm  s302m  shorten  sipr  smackaud  sol_dpcm  srt  truehd  truespeech  tta  twinvq  vmdaudio  vorbis  wavpack  wmapro  wmav1  wmav2  wmavoice  ws_sn)


#trick awk
newprofile=$(awk 'gsub(/ /,"_")' << _EOF $newprofile
_EOF
)

if [[ "$whichprofile" == audio ]] ; then 
userprofile="$newnameprofile $format -acodec $acodec   -ab $abitrate -b $vbitrate   -ar $samplerate" 

elif [[ "$whichprofile" == device ]] ; then 
userprofile="$newnameprofile $format -acodec $acodec -vcodec $vcodec -ab $abitrate -b $vbitrate -fps $framerate -ar $samplerate" 

elif [[ "$whichprofile" == video ]] ; then 
userprofile="$newnameprofile $format -acodec $acodec -vcodec $vcodec -ab $abitrate -b $vbitrate -fps $framerate -ar $samplerate" 
fi 

stuffer=$(kdialog --title $"User profile" --textinputbox $"this is the line do you want save it or add other stuff ?" -- "$userprofile" )

if [[ ! -z "$stuffer"  ]] ; then
	if [[ "$whichprofile" == audio ]] ; then 
		echo "$stuffer" >>"$ffmpeg_profile_file_audio"

	elif [[ "$whichprofile" == device ]] ; then 
		echo "$stuffer" >>"$ffmpeg_profile_file_device"
	elif [[ "$whichprofile" == video ]] ; then 
		echo "$stuffer" >>"$ffmpeg_profile_file_video"
	fi 




else
function_message_error $"Error you profile is empty are you a fuckin idiot? hahaaha -.-... exiting"


fi

function_menu_start
 

}



function_ffmpeg_single_pass (){

askopen=""
a=1
value=""

if [[ ! -z "$pidofx"  ]] ; then  

	mystufvariabletouseonmyscript=$(kdialog --title $"FFmpeg Dolphin Service Menu"  --progressbar $"Starting Conversion..." 100)
	qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true
	qdbus $mystufvariabletouseonmyscript  showCancelButton true
	echo "start new conversion loop using profile
	
	"> "$templog"
 
	while  read <&3 line ; do
			qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Processing file..... $line"
			echo "Log File $line
				
			">> "$templog"
		
		
		
			echo "$ffmpegpath -i   \""$line"\"  "$profile" "$overwrite" \""${line%%.*}.$outformat\""
		
			" >> "$templog"
 
		
			$ffmpegpath -i  "$line"   $profile   $overwrite   "${line%%.*}.$outformat" 2>>"$templog" & pid=$!
			while kill -0 $pid ; do #check if you can send message to ffmpeg 
				if [[ "$(qdbus  $mystufvariabletouseonmyscript wasCancelled)" == true ]]; then 
				kill $pid
				qdbus $mystufvariabletouseonmyscript close
				function_check_for_errors
				exit
				fi
			done
			value=$(($(($a*100))/$numberoffile))
			qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
			a=$(($a+1))
	done 3< "$listoffile"

else


echo $"FFmpeg Dolphin Service Menu Starting Conversion..."
	while  read <&3 line ; do
		echo "$ffmpegpath -i   \""$line"\"  "$profile" "$overwrite" \""${line%%.*}.$outformat\"""
		echo

		$ffmpegpath -i  "$line"   $profile   $overwrite   "${line%%.*}.$outformat" 2>>"$templog"
		value=$(($(($a*100))/$numberoffile))
		echo " $a of $numberoffile $value%"
		a=$(($a+1))
	done 3< "$listoffile"


fi 


	if [[ "$value" == 100 ]];then

		function_check_for_errors

		if [[ "$passivepopup" == "enabled" ]];then
			function_passivepopup_test $"FFmpeg service menu : Jobs done!"
		fi
		
		exit
	fi
 

}

function_ffmpeg_double_pass (){
askopen=""
a=1

if [[ ! -z "$pidofx"  ]] ; then  

	mystufvariabletouseonmyscript=$(kdialog --title $"FFmpeg Dolphin Service Menu"  --progressbar $"Starting Conversion..." 100)
	qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true
	qdbus $mystufvariabletouseonmyscript  showCancelButton true
 

 
	
		while  read <&3 line ; do
			qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line pass 1"
			echo "Log File $line
		
			">> "$templog"
			echo "$ffmpegpath -i   "$line" $profile  -pass 1 $overwrite  "${line%%.*}.$outformat"
			$ffmpegpath -i   "$line" $profile  -pass 2 "$overwrite" "${line%%.*}.$outformat"
			" >> "$templog"
		
			$ffmpegpath -i   "$line"  $profile $overwrite -pass 1 "${line%%.*}.$outformat"   2>>"$templog" & pid=$!
		 
			while kill -0 $pid ; do #check if you can send message to ffmpeg 
			if [[ "$(qdbus  $mystufvariabletouseonmyscript wasCancelled)" == true ]]; then 
			kill $pid
			function_check_for_errors
			exit
			fi
			done
		 
			qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line pass 2"
			echo "$ffmpegpath -i   "$line" $profile  -pass 2 "$overwrite" "${line%%.*}.$outformat"" >> "$templog"
			echo >> "$templog"
		
			$ffmpegpath -i   "$line"  $profile $overwrite -pass 2 "${line%%.*}.$outformat"  2>>"$templog" & pid=$!
			while kill -0 $pid ; do #check if you can send message to ffmpeg 
			if [[ "$(qdbus  $mystufvariabletouseonmyscript wasCancelled)" == true ]]; then 
			kill $pid
			function_check_for_errors
			exit
			fi
			done

			value=$(( $(($a*100))/$numberoffile ))
			qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
			a=$(($a+1))
			echo "
		
			" >> "$templog"
		done 3< "$listoffile"
		
else

		while  read <&3 line ; do
			echo $"FFmpeg Dolphin Service Menu Starting Conversion..."

			echo "$ffmpegpath -i   "$line" $profile  -pass 1 "$overwrite" "${line%%.*}.$outformat"" >> "$templog"
			
			echo $"Starting Conversion...processing file $line pass 1..."
			$ffmpegpath -i   "$line"  $profile $overwrite -pass 1 "${line%%.*}.$outformat"   
			echo "$ffmpegpath -i   "$line" $profile  -pass 2 "$overwrite" "${line%%.*}.$outformat"" >> "$templog"
			echo >> "$templog"
			echo $"pass 1 done, doing pass 2 for file $line"
		 	$ffmpegpath -i   "$line"  $profile $overwrite -pass 2 "${line%%.*}.$outformat"  2>>"$templog"
		 	echo " $a of $numberoffile $value%"
			value=$(( $(($a*100))/$numberoffile ))
			
			a=$(($a+1))
			echo "
		
			" >> "$templog"
		done 3< "$listoffile"


fi 
 


	if [[ "$value" == 100 ]];then
	
		if [[ "$passivepopup" == "enabled" ]];then
			 function_passivepopup_test $"Conversions done!"
		fi

	function_check_for_errors
	exit
	fi
 

}

 

function_ffmpeg_profile  (){

checkprogram
function_check

case "$1" in 
audio)
function_load_profiles_audio
;;
device)
function_load_profiles_device
;;
video)
function_load_profiles_video
;;
esac
 
if [[ -z "$ansprofile"   ]] ;then 
function_menu_start
elif [[ "$ansprofile" == "Back To the Main Menu" ]]; then 
function_menu_start
else 
	if [[ -z "$numberofpass" ]]; then 
		function_ffmpeg_single_pass
	elif [[ $numberofpass == 1 ]]; then
		function_ffmpeg_single_pass
	elif [[ $numberofpass == 2 ]];then
		function_ffmpeg_double_pass
	else 
	function_ffmpeg_single_pass
	fi 
fi 

}












 
 
 
 function_menu_start (){
 # a $"Convert Advanced User" pd $"Convert Using a  Profile Dual Pass X2 slower"
if [[ -z "$pidofx" ]] ; then 
clear
function_menu_first_antix "$message"
else 
function_menu_first
fi 
 
function_ansmenu
 
 }
 
 
 function_menu_first (){
 # a $"Convert Advanced User" pd $"Convert Using a  Profile Dual Pass X2 slower"
 
ans=$(kdialog  --title $"Main Menu FFmpeg Dolphin Service Menu" --menu  $"Choose an option"  add $"Add Files" addf $"Add Folders" edit $"Open List With Text Editor" d $"Remove List" r $"Restore old List" e $"Convert Made Easy" pa $"Convert Using a  Profile Audio" pd  $"Convert Using a  Profile Device" pv $"Convert Using a  Profile Video" ep $"Edit Profiles"  extra $"Extra" setf $"Set ffmpeg path" tf $"Test FFmpeg Encoders"   ds $"Remove Settings & rebuild them" dp $"Remove Profiles & rebuild them" es $"Edit Settings" v "Version Author Copyright" help $"Help" ex $"Exit"  --default $"Add Files")
 
function_ansmenu
 
 }
 
 function_menu_first_antix (){

tput cup 3 14
tput setaf 2


echo "http://code.google.com/p/kde-peace-settings/source/browse/ffmpeg-peace-service-menu/usr/bin/ffmpeg-peace-service-menu?name=master"

tput cup 5 17 
tput rev 
echo $"Main Menu FFmpeg Dolphin Service Menu"
tput sgr0

menutext[0]=$" Add Files"
menutext[1]=$" Add Folders"
menutext[2]=$" Open List With Text Editor"
menutext[3]=$" Remove List"
menutext[4]=$" Restore old List"
menutext[5]=$" Convert Made Easy"
menutext[6]=$" Convert Using a  Profile Audio"
menutext[7]=$" Convert Using a  Profile Device"
menutext[8]=$" Convert Using a  Profile Video"
menutext[9]=$"Edit Profiles"
menutext[10]=$"Extra"
menutext[11]=$"Set ffmpeg path"
menutext[12]=$"Test FFmpeg Encoders"
menutext[13]=$"Remove Settings & rebuild them"
menutext[14]=$"Remove Profiles & rebuild them"
menutext[15]=$"Edit Settings"
menutext[16]=$"Version Author Copyright"
menutext[17]=$"Help"
menutext[18]=$"Exit"

 
menulabel[0]=$"add"
menulabel[1]=$"addf"
menulabel[2]=$"edit"
menulabel[3]=$"d"
menulabel[4]=$"r"
menulabel[5]=$"e"
menulabel[6]=$"pa"
menulabel[7]=$"pd"
menulabel[8]=$"pv"
menulabel[9]=$"ep"
menulabel[10]=$"extra"
menulabel[11]=$"setf"
menulabel[12]=$"tf"
menulabel[13]=$"ds"
menulabel[14]=$"dp"
menulabel[15]=$"es"
menulabel[16]=$"v"
menulabel[17]=$"help"
menulabel[18]=$"ex"

a=0
b=7
echo 
for menut in "${menutext[@]}" ; do 
c=$(($b+$a))

tput cup $c 16
echo "$(($a+1)). ${menutext[$a]}"
a=$(($a+1))
 
done

tput setf 4
echo
echo $message
message=""
echo 
tput setaf 7
tput bold
tput cup $(($c+2)) 16
read -p $"Enter Your Choice (1-"$a")" choice



tput sgr0 
if  [[ "$choice" != *[!0-9]*  ]] ;then 
	
	ans="${menulabel[$(($choice-1))]}"
	echo $ansmainmenu
elif [[ -z "$choice" ]]; then 
function_message_error $"Empty answer"	
function_menu_start
else
function_message_error $"You have to choose a number (1-"$a") it seems you did not ...you have written "\" $choice \"" "
function_menu_start

# function_menu_start
fi 


 }
 
 

 ##########FUNCTION AFTER MAIN MENU #########################
function_ansmenu(){
case "$ans" in
 
e)
function_ffmpeg_easy
;;
 
 extra)
# kdialog --msgbox $"Sorry it will take time for this..."
# function_menu_start
function_menu_advanced
#function_menu_start #
 ;;

 d)
 function_delete silent
 ;;
 ds)
 function_delete_settings
 ;;
 ep)
 function_edit_profile
 ;;
 r)
 function_restore
 ;;
 pa)
function_ffmpeg_profile audio
 ;;
 pd)
 function_ffmpeg_profile device
 ;;
 
 pv)
 function_ffmpeg_profile video
 ;;
 p)
 function_ffmpeg_profile
 ;;
 edit)
 	if [[ ! -z "$pidofx" ]]; then 
		$xtexteditor "$listoffile" 
	else
		$xtexteditor "$listoffile" 
	fi 
 
 
 function_menu_start
 ;;
 setf)
 
 function_set_ffmpegpath
 function_menu_start
 ;;
 es)
  	if [[ ! -z "$pidofx" ]]; then 
		 $xtexteditor "$ffmpeg_service_menu_settings" 
	else
		$texteditor "$ffmpeg_service_menu_settings" 
	fi 
function_load_settings
function_menu_start
 ;;
 dp)
 function_delete_profiles
 ;;
 help)
 function_help
 ;;
add)
function_addfile
function_menu_start
 ;;
 
addf)
	if [[ ! -z "$pidofx" ]]; then 
		function_add_folder "$(kdialog --getexistingdirectory  "$HOME/Video")"  
	else
		echo $"Add A Folder Tab Autocompletio is activated ;)"
		cd "$HOME"
		echo "$PWD"
		read -e  folder 
		function_add_folder "$folder"
	fi 


function_menu_start
 ;;
 tf)
 function_passivepopup_test $"FFmpeg Peace Service Menu : FFmpeg Encoders Test Started"
 function_test_ffmpeg
 ;;
 v)
 	if [[ ! -z "$pidofx" ]]; then 
		kdialog --title "$title" --msgbox "$Version $Author $License"
	else
		echo $"Version $Version Author $Author License $License"

	fi 

function_menu_start
 ;;
 ex)
 exit
 ;;
 *)
function_ask_exit
 ;;
 esac
 
}
################################################################
 

 
 
#-v|--verbose) verbose=1; shift;;


####################START SCRIPT############################



lockdir=/tmp/ffmpeg_avconv_service_menu.lock
 if mkdir "$lockdir"
 then
     echo >&2 "successfully acquired lock"

     # Remove lockdir when the script finishes, or when it receives a signal
     trap 'rm -rf "$lockdir"' 0    # remove directory when script finishes
     trap "exit 2" 1 2 3 15        # terminate script when receiving signal

     # Optionally create temporary files in this directory, because
     # they will be removed automatically:
     tmpfile=$lockdir/filelist

 else
     echo >&2 "cannot acquire lock, giving up on $lockdir if you want run this script you need to do rm -R $lockdir"
     exit 0
 fi
 

Author="nowardev@gmail.com"
License="GLPv3"
license="Copyright (C) 2012 nowardev nowardev@gmail.com
 
This file is part of kde-peace-settings.
 
kde-peace-settings is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>."

title=$"FFmpeg Dolphin Service Menu"
listoffile="$HOME/ffmpeg-service-menu-qt.lst"
# easyprofile_file="$HOME/.FFmpeg_easy_profile"
ffmpeg_profile_file_audio="$HOME/.FFmpeg_profiles-qt_audio.lst"
ffmpeg_profile_file_device="$HOME/.FFmpeg_profiles-qt_device.lst"
ffmpeg_profile_file_video="$HOME/.FFmpeg_profiles-qt_video.lst"
templog="/tmp/ffmpeg_peace_dolphin_service_menu.log"
ffmpeg_service_menu_settings="$HOME/.FFmpeg_service_menu_settings"
resetlistafterconversion="yes"
passivepopup="enabled"
pidofx="$(pidof X)"
probe=$(type -p ffprobe)

threads=$(awk '/processor/{print}' /proc/cpuinfo | wc -l)
if [[ -e "$listoffile" ]]; then 
numberoffile=$(wc -l <"$listoffile")
fi 

# easyprofile="$(awk  -F':' '/easyprofile:/{print $2}' "$ffmpeg_service_menu_settings")"







###provide the correct loadsettings fucntion if wx is loaded
if [[ "$1" == "-wx" ]] ; then 
function_set_antix
function_load_settings
elif [[ "$1" == "-h" || "$1" == "-hx" ]]; then 
echo
else 
function_load_settings
fi 

checkprogram


echo $ffmpegpath >>"$templog"
echo "Version $Version
Author $Author
License $License
List of Files location $listoffile
# easyprofile_file location $easyprofile_file
FFmpeg Audio profile location $ffmpeg_profile_file_audio
FFmpeg Device profile location  $ffmpeg_profile_file_device
FFmpeg Video profile location $ffmpeg_profile_file_video
Temp Log file location $templog
FFmpeg service menu Settings Location $ffmpeg_service_menu_settings
Reset list after conversion $resetlistafterconversion
OverWrite files if they are present ? $overwrite
Cpu used $threads
Cpu detected $(awk '/processor/{print}' /proc/cpuinfo | wc -l)
Number of files  $numberoffile
Easy profile used $easyprofile" >>"$templog"

if  [[ $1 == -*  ]]; then
	case "$1" in
	-h|--help|-\?) function_help; exit 0;;
	-hx) function_help x; exit 0;;
	  
	-f) if (($# > 1)); then
			shift ;for file in "$@"; do
		echo "$file" >>$listoffile

		done
		  else
			echo $"-f requires files" 1>&2
			exit 1
		  fi ;;
		  
	-fo) if (($# > 1)); then
			shift ;for folder in "$@"; do
		function_add_folder_shell "$folder"  
		done
		  else
			echo $"-f requires a folder at least" 1>&2
			exit 1
		  fi ;;
		 -fox)if (($# > 1)); then
			shift ;for folder in "$@"; do
		function_add_folder "$folder"  
		done
		  else
			kdialog --error $"-f requires a folder at least" 1>&2
			exit 1
		  fi
		 ;;
	-a)
	function_analyze "$2"
# 	function_analyze n "$2"
	;;
	-e)  $texteditor "$listoffile"
	;;
	-ek)  kate "$listoffile"
	;;
	-d) function_delete silent
	;;
	-decompile)
	function_build
	;;
	-cf)
	function_compile_ffmpeg_fromgit
	;;
	-tf)
	function_test_ffmpeg
	;;
	-wx)
	function_set_antix
	function_menu_start
	;;
	-mx)
	function_menu_start
	;;
	-r) 
	function_restore
	;;
	setf)
	function_set_ffmpegpath
	;;
	--) shift; echo "invalid option: $1" 1>&2; function_help; exit 1;;
	-*) echo "invalid option: $1" 1>&2; function_help; exit 1;;
	esac
else
function_help; exit 1
fi

 

 

