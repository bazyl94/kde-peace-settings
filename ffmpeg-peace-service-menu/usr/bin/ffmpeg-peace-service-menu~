#!/bin/bash -x

#
#Copyright (C) 2012 nowardev nowardev@gmail.com
 
#This file is part of kde-peace-settings.
 
#kde-peace-settings is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
Version="0.0.1"
Author="nowardev@gmail.com"
License="GLPv3"
title=$"FFmpeg Dolphin Service Menu"
threads=`cat /proc/cpuinfo | grep processor | wc -l` 
listoffile="$HOME/ffmpeg-service-menu-qt.lst"
ffmpeg_profile_file="$HOME/.FFmpeg_profiles-qt.lst"
numberoffile=$(wc -l <$listoffile)
passivepopup="enabled"
overwrite="-y"
#DONE

##check program#########################################
checkprogram(){

program[0]=ffmpeg
program[1]=awk
#program[2]=kdialog
 for program in "${program[@]}"; 
do if ! type -p "$program" >/dev/null;
 then echo "$program not found; PLEASE INSTALL IT" >&2
echo "error exiting..." >&2
exit 1; 
fi; done

}

function_help(){

echo $"FFmpeg peace service menu help 


USE:

-h print this help
-f <file1>  <file2> <file3>		Add files to conversion list
-fo <folder1>  <folder2> <folder3>	Add Folders to conversion list
-e  					Edit conversion list with nano
-ek					Edit conversion list with kate
-d					DELETE convesion list
-mq					start the kdialog menu need X
this script help you to convert files with dolphin and via shell:

this script can use profiles file that is stored here $ffmpeg_profile_file
it read the list of the file to convert from a file that is located here $listoffile"


 

}

function_addfile(){

for f in "$(kdialog --title $"Select files you want convert" --separate-output  --multiple --getopenfilename  "$HOME" )"
do echo "$f" >>"$listoffile" 
done

}


function_add_folder(){

#shopt -s nullglob 
 kdialog --passivepopup $"adding folder...this could take time..wait"
while read line ;do 

for extension in 3g2 3gp 4xm IFF ISS MTV RoQ a64 aac ac3 adts aea aiff alaw alsa amr anm apc ape applehttp asf asf_stream ass au avi avm2 avs bethsoftvid bfi bink c93 caf cavsvideo cdg crc daud dfa dirac dnxhd dsicin dts dv dv1394 dvd dxa ea ea_cdata eac3 f32be f32le f64be f64le fbdev ffm ffmetadata film_cpk filmstrip flac flic flv framecrc framemd5 g722 gif gsm gxf h261 h263 h264 idcin image2 image2pipe ingenient ipmovie ipod iv8 ivf jack jv libdc1394 lmlm4 lxf m4v matroska matroska,webm md5 mjpeg mlp mm mmf mov mov,mp4,m4a,3gp,3g2,mj2 mp2 mp3 mp4 mpc mpc8 mpeg mpeg1video mpeg2video mpegts mpegtsraw mpegvideo mpjpeg msnwctcp mulaw mvi mxf mxf_d10 mxg nc nsv null nut nuv ogg oma oss psp psxstr pva qcp r3d rawvideo rcv rl2 rm rpl rso rtp rtsp s16be s16le s24be s24le s32be s32le s8 sap sdp shn siff smk sol sox spdif srt svcd swf thp tiertexseq tmv truehd tta tty txd u16be u16le u24be u24le u32be u32le u8 vc1 vc1test vcd video4linux2 vmd vob voc vqf w64 wav wc3movie webm wsaud wsvqa wtv wv x11grab xa xwma yop yuv4mpegpipe ; do 

if  [[ "$line" == *.$extension ]] ; then

 echo  "$line" >>"$listoffile"
 
fi 
done
 
done< <(find "$1" -type f)
 kdialog --passivepopup $"adding folder...done"

}


function_add_folder_shell(){

#shopt -s nullglob 
 echo  $"adding folder...this could take time..wait"
while read line ;do 

for extension in 3g2 3gp 4xm IFF ISS MTV RoQ a64 aac ac3 adts aea aiff alaw alsa amr anm apc ape applehttp asf asf_stream ass au avi avm2 avs bethsoftvid bfi bink c93 caf cavsvideo cdg crc daud dfa dirac dnxhd dsicin dts dv dv1394 dvd dxa ea ea_cdata eac3 f32be f32le f64be f64le fbdev ffm ffmetadata film_cpk filmstrip flac flic flv framecrc framemd5 g722 gif gsm gxf h261 h263 h264 idcin image2 image2pipe ingenient ipmovie ipod iv8 ivf jack jv libdc1394 lmlm4 lxf m4v matroska matroska,webm md5 mjpeg mlp mm mmf mov mov,mp4,m4a,3gp,3g2,mj2 mp2 mp3 mp4 mpc mpc8 mpeg mpeg1video mpeg2video mpegts mpegtsraw mpegvideo mpjpeg msnwctcp mulaw mvi mxf mxf_d10 mxg nc nsv null nut nuv ogg oma oss psp psxstr pva qcp r3d rawvideo rcv rl2 rm rpl rso rtp rtsp s16be s16le s24be s24le s32be s32le s8 sap sdp shn siff smk sol sox spdif srt svcd swf thp tiertexseq tmv truehd tta tty txd u16be u16le u24be u24le u32be u32le u8 vc1 vc1test vcd video4linux2 vmd vob voc vqf w64 wav wc3movie webm wsaud wsvqa wtv wv x11grab xa xwma yop yuv4mpegpipe ; do 

if  [[ "$line" == *.$extension ]] ; then

 echo  "$line" >>"$listoffile"
 
fi 
done
 
done< <(find "$1" -type f)
 echo  $"adding folder...done"

}

function_reload_function(){
$1
}

function_load_profiles(){

 
ARGS="--menu \"choose your profile\" --"

while read PROFILE OPTS; do

    ARGS="${ARGS} \"${OPTS}\" \"${PROFILE}\""
done < $ffmpeg_profile_file

ansprofile=$(echo $ARGS | xargs kdialog)

if [[ -z "$ansprofile" ]]; then 
kdialog --error $"No profile given please select a profile"
function_reload_function "function_load_profiles"
fi
echo $ansprofile
profile=$(awk '{$1 = "" ; print}'<<_EOF
$ansprofile 
_EOF)
echo $profile

outformat=$(awk '{print $1}'<<_EOF
$ansprofile
_EOF)

echo $outformat

}


function_check(){

if [[ ! -e "$listoffile" ]] ; then
kdialog --error $"i can't find the conversion list $HOME/ffmpeg-service-menu-qt.lst"
ansmainmenu=""
function_menu_start

elif [[ ! -s "$listoffile" ]]; then 
kdialog --error $"Check your list is empty! add some file to your list file ~/ffmpeg-service-menu-qt.lst"
ansmainmenu=""
function_menu_start
fi

if [[ ! -e "$ffmpeg_profile_file" ]] ; then
kdialog --passivepopup $"i can't find the ffmpeg profile files.. autogenerating $ffmpeg_profile_file"
echo "Same_quality avi   -sameq
Galaxy_Tab_1024x800 avi -acodec libvo_aacenc -ac 2 -ab 160k -s 1024x800 -vcodec libx264  -f mp4 
3GP_phone 3gp -s 176x144 -r 12 -b 30 -ab 12 -ac 1 -ar 8000
Mpeg_standard mpeg -r 25 -f mpeg -vcodec mpeg2video -ar 48000 -sameq
Mp4_standard mp4  -r 25 -f mp4 -vcodec mpeg4 -ar 48000
MOTOROLA_V3I mp4   -s qcif -vcodec mpeg4 -acodec aac -ac 2 -ar 48000 -r 25 -ab 128 
MOTOROLA_V3X mp4 -s 240x320  -vcodec mpeg4 -acodec aac -ac 2 -ar 48000 -r 25 -ab 128k 
NOKIA_N800 mp4 -s 400x240  -vcodec mpeg4 -acodec aac -ac 2 -ar 48000 -r 25 -ab 128k 
NOKIA_N73 mp4  -s 320x240  -vcodec mpeg4 -acodec aac -ac 2 -ar 48000 -r 25 -ab 128k -b 400k " > $ffmpeg_profile_file

fi

}

function_menu_advanced(){

 
ansadvanced=$(kdialog --title $"Advanced Menu FFmpeg Dolphin Service Menu" --menu  $"Choose an option" decompile $"Decompile Video" compile $"Compile a Video" build $"Build Your Own Function" addsubtitle $"Add Subtitle" resize $"Resize Video" addfilter $"Add A Filter"  v "Version Author Copyright" ex $"Exit")

}

function_check_for_errors(){
errors=$(awk '/Unable/{print }' /tmp/ffmpeg-peace.log)
askopen=0

if [[ "$errors" =~ "ffmpeg-peace.log' for reading (No such file or directory)" ]] ; then 
	kdialog --error $"Unable ot open /tmp/ffmpeg-peace.log this is bad! "
	askopen=1
elif [[ "$errors" =~ "Unable to find a suitable output format for" ]]; then 
kdialog --error $"Unable to find a suitable output format for ..wrong outformat?"
askopen=1
elif [[ "$errors" =~ "not found" ]]; then 
kdialog --error $"No preset found ?"
askopen=1


else
askopen=0
fi

if [[ "$askopen" == 1 ]]; then 

	ans=$(kdialog --yesno $"Do you want open the log.. I have found some error on the log?")
		if [[ $? == 0 ]] ; then
			kate /tmp/ffmpeg-peace.log
		else 
			function_menu_start
		fi

fi
}

function_ffmpeg_easy (){
 
function_check

a=1
mystufvariabletouseonmyscript=$(kdialog --progressbar $"Starting Conversion..." 100)

qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true

qdbus $mystufvariabletouseonmyscript  showCancelButton true 

until test "true" = `qdbus  $mystufvariabletouseonmyscript wasCancelled` ; do 
	outformat=$(kdialog --combobox $"Convert to..keeping the same quality" mp3 mp2 aac ape mp4 mov avi mpg mpeg webm wmv theora flv asf sticaz --default webm)
	while read line ; do
		qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line" 
		echo "ffmpeg -i  "$line"  -sameq "$overwrite" "${line%%.*}.$outformat"" >> /tmp/ffmpeg-peace.log
		ffmpeg -i  "$line"  -sameq "$overwrite" "${line%%.*}.$outformat"  2>/tmp/ffmpeg-peace.log



		value=$(( $(($a*100))/$numberoffile ))
		qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
		a=$(($a+1))
		done< "$listoffile"
	if [[ "$value" == 100 ]];then 
	
		if [[ "$passivepopup" == "enabled" ]];then
			kdialog --passivepopup $"Conversions done!"
		fi

	function_check_for_errors
		exit
	fi
done



}

function_analyze(){
info=$(ffprobe "$1" 2>&1 |awk  '                                                      
/Video:/{$4 gsub(/\,/,"");gsub(/\(Simple Profile\)/,"");gsub( /\[[^\)]*]/, "" ) ;videocodec = $4 ; pixelformat = $5 ; resolution= $6 ;videobitrate = $7; fps = $9 } 
/Duration:/{$4 gsub(/\:/," ") ;realseconds= $4; seconds = int($4); minutes= $3 ;hours= $2;totalsoundtrack = (seconds+(minutes*60)+(hours*3600)); totalbitrate = $8 }
/Audio:/{$4 gsub(/\,/,"");gsub(/\(Simple Profile\)/,"");gsub( /\[[^\)]*]/, "" ); audiocodec =$4; freq= $5 ; channel =$7 ; abitrate= $9} END {print "Video Codec: " videocodec ;print "Audio Codec: " audiocodec;print "Video Bitrate: " videobitrate ; print "Audio Bitrate: " abitrate;print "Total Bitrate: " totalbitrate ;print "Resolution: " resolution ; print "Fps: " fps ;   print "Frequency: " freq ; print "Channel: " channel;print "Pixel Format: " pixelformat ;print "Total Duration: " hours ":" minutes ":" realseconds ;print "Total seconds " totalsoundtrack } ')

kdialog --info "$info"

}


function_ffmpeg_profile (){
 
function_check
function_load_profiles

a=1
mystufvariabletouseonmyscript=$(kdialog --progressbar $"Starting Conversion..." 100)
qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.autoClose true
qdbus $mystufvariabletouseonmyscript  showCancelButton true 
echo "start new conversion loop using profile 

"> /tmp/ffmpeg-peace.log
 
until test "true" = `qdbus  $mystufvariabletouseonmyscript wasCancelled` ; do 
	
	while read line ; do
		qdbus $mystufvariabletouseonmyscript org.kde.kdialog.ProgressDialog.setLabelText $"Starting Conversion...processing file $line"
		echo "Log File $line
		
		">> /tmp/ffmpeg-peace.log
		echo "ffmpeg -i  "$line" $profile  -sameq "$overwrite" "${line%%.*}.$outformat"" >> /tmp/ffmpeg-peace.log
		
		ffmpeg -i  "$line"  $profile "$overwrite" "${line%%.*}.$outformat"  2>>/tmp/ffmpeg-peace.log



		value=$(( $(($a*100))/$numberoffile ))
		qdbus  $mystufvariabletouseonmyscript Set org.kde.kdialog.ProgressDialog value $value
		a=$(($a+1))
		echo "
		
		" >> /tmp/ffmpeg-peace.log
		done< "$listoffile"
	if [[ "$value" == 100 ]];then 
	
		if [[ "$passivepopup" == "enabled" ]];then
			kdialog --passivepopup $"Conversions done!"
		fi

	function_check_for_errors
		exit
	fi
done



}





 
 
 function_menu_start(){
 # a $"Convert Advanced User"
 
ans=$(kdialog --title $"Main Menu FFmpeg Dolphin Service Menu" --menu  $"Choose an option" e $"Convert Made Easy" p $"Convert Using a  Profile" add $"Add Files" addf $"Add Folders" edit $"Open List With Kate Text Editor"  v "Version Author Copyright" ex $"Exit")
 
function_ansmenu
 
 }
 

 
function_ansmenu(){
case "$ans" in 
 
e)
function_ffmpeg_easy
;;
 
 a)
kdialog --msgbox $"Sorry it will take time for this..."
function_menu_start
 ;;
 
 p)
 function_ffmpeg_profile
 ;;
 edit)
 
 kate "$listoffile"
 function_menu_start
 ;;
add)
function_addfile
function_menu_start
 ;;
 
addf)
function_add_folder "$(kdialog --getexistingdirectory  "$HOME/Video")"  
function_menu_start
 ;;
 v)
kdialog --title "$title" --msgbox "$Version $Author $License"
function_menu_start
 ;;
 ex)
 exit
 ;;
 *)
kdialog --title "$title" --yesno $"You have not choose an option do you want exit?"
	if [[ $? == 1 ]] ; then 
		function_menu_start
	else
		exit
	fi 
 ;;
 esac
 
}
 

function_old_input(){
if [[ -z "$1" ]] ; then
function_menu_start
elif [[ "$1" == "-e" ]]; then 
 kate "$listoffile"
elif [[ "$1" == "-v" ]]; then 
echo "Version : $Version Author: $Author License: $License"
function_menu_start
elif [[ "$1" == "-f" ]]; then  
	shift ;for file in "$@"; do
		echo "$file" >>$listoffile

		done

exit
fi
}


#-v|--verbose) verbose=1; shift;;
while [[ $1 == -* ]]; do
    case "$1" in
	-h|--help|-\?) function_help; exit 0;;
      
	-f) if (($# > 1)); then
            shift ;for file in "$@"; do
		echo "$file" >>$listoffile

		done
          else
            echo "-f requires filest" 1>&2
            exit 1
          fi ;;
          
	-fo) if (($# > 1)); then
            shift ;for folder in "$@"; do
		function_add_folder_shell "$folder"  
		done
          else
            echo "-f requires a folder at least" 1>&2
            exit 1
          fi ;;
	-m) function_menu_start 
	;;
	-e)  nano "$listoffile" 
	;;
	-ek)  kate "$listoffile" 
	;;
	-d)  mv "$listoffile"  /home/$USER/.local/share/Trash/files/ 
	;;
	-r)  mv   /home/$USER/.local/share/Trash/files/ffmpeg-service-menu-qt.lst "$listoffile" 
	;;
	--) shift; break;;
	-*) echo "invalid option: $1" 1>&2; function_help; exit 1;;
    esac
done